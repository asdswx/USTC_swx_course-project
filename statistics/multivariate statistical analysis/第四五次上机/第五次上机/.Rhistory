knitr::opts_chunk$set(echo = TRUE)
library(car)
library(plotrix)
x=read.table("T5-12.DAT")
m=colMeans(x)
s=cov(x)
re=eigen(s)
lam=re$val
ve=re$vec
print(ve)
f1=2*29/28/30*qf(0.95,2,28)
plot(x)
draw.ellipse(m[1],m[2],sqrt(lam[2]*f1),sqrt(lam[1]*f1),angle=-atan(ve[1,1]/ve[2,1]),deg=FALSE)
library(car)
library(plotrix)
x=read.table("T5-12.DAT")
m=colMeans(x)
s=cov(x)
re=eigen(s)
lam=re$val
ve=re$vec
print(ve)
f1=2*44/43/45*qf(0.95,2,43)
plot(x)
draw.ellipse(m[1],m[2],sqrt(lam[2]*f1),sqrt(lam[1]*f1),angle=-atan(ve[1,1]/ve[2,1]),deg=FALSE)
library(car)
library(plotrix)
x=read.table("T5-12.DAT")
m=colMeans(x)
s=cov(x)
re=eigen(s)
lam=re$val
ve=re$vec
print(ve)
f1=2*44/43/45*qf(0.95,2,43)
draw.ellipse(m[1],m[2],sqrt(lam[2]*f1),sqrt(lam[1]*f1),angle=-atan(ve[1,1]/ve[2,1]),deg=FALSE)
library(car)
library(plotrix)
x=read.table("T5-12.DAT")
m=colMeans(x)
s=cov(x)
re=eigen(s)
lam=re$val
ve=re$vec
print(ve)
f1=2*44/43/45*qf(0.95,2,43)
plot.new()
draw.ellipse(m[1],m[2],sqrt(lam[2]*f1),sqrt(lam[1]*f1),angle=-atan(ve[1,1]/ve[2,1]),deg=FALSE)
library(car)
library(plotrix)
x=read.table("T5-12.DAT")
m=colMeans(x)
s=cov(x)
re=eigen(s)
lam=re$val
ve=re$vec
print(ve)
f1=2*44/43/45*qf(0.95,2,43)
plot(x)
draw.ellipse(m[1],m[2],sqrt(lam[2]*f1),sqrt(lam[1]*f1),angle=-atan(ve[1,1]/ve[2,1]),deg=FALSE)
library(car)
library(plotrix)
x=read.table("T5-12.DAT")
m=colMeans(x)
s=cov(x)
re=eigen(s)
lam=re$val
ve=re$vec
print(ve)
f1=2*44/43/45*qf(0.95,2,43)
plot(x)
axis(1,180:200, 180:200, las = 1)
axis(2,seq(270, 290, 2), seq(270, 290, 2), las = 1)
draw.ellipse(m[1],m[2],sqrt(lam[2]*f1),sqrt(lam[1]*f1),angle=-atan(ve[1,1]/ve[2,1]),deg=FALSE)
library(car)
library(plotrix)
x=read.table("T5-12.DAT")
m=colMeans(x)
s=cov(x)
re=eigen(s)
lam=re$val
ve=re$vec
print(ve)
f1=2*44/43/45*qf(0.95,2,43)
qwq=(0,0)
library(car)
library(plotrix)
x=read.table("T5-12.DAT")
m=colMeans(x)
s=cov(x)
re=eigen(s)
lam=re$val
ve=re$vec
print(ve)
f1=2*44/43/45*qf(0.95,2,43)
qwq=c(0,0)
plot(qwq)
axis(1,180:200, 180:200, las = 1)
axis(2,seq(270, 290, 2), seq(270, 290, 2), las = 1)
draw.ellipse(m[1],m[2],sqrt(lam[2]*f1),sqrt(lam[1]*f1),angle=-atan(ve[1,1]/ve[2,1]),deg=FALSE)
library(car)
library(plotrix)
x=read.table("T5-12.DAT")
m=colMeans(x)
s=cov(x)
re=eigen(s)
lam=re$val
ve=re$vec
print(ve)
f1=2*44/43/45*qf(0.95,2,43)
axis(1,180:200, 180:200, las = 1)
library(car)
library(plotrix)
x=read.table("T5-12.DAT")
m=colMeans(x)
s=cov(x)
re=eigen(s)
lam=re$val
ve=re$vec
print(ve)
f1=2*44/43/45*qf(0.95,2,43)
plot(x)
draw.ellipse(m[1],m[2],sqrt(lam[2]*f1),sqrt(lam[1]*f1),angle=-atan(ve[1,1]/ve[2,1]),deg=FALSE)
library(car)
library(plotrix)
x=read.table("T5-12.DAT")
m=colMeans(x)
s=cov(x)
re=eigen(s)
lam=re$val
ve=re$vec
print(ve)
f1=2*44/43/45*qf(0.95,2,43)
plot(x)
draw.ellipse(m[1],m[2],sqrt(lam[2]*f1),sqrt(lam[1]*f1),angle=-atan(ve[1,1]/ve[2,1]),deg=FALSE)
mx=c(190,275)
me=m-mx
t1=t(me)%*%solve(s/45)%*%me
t1
library(car)
library(plotrix)
x=read.table("T5-12.DAT")
m=colMeans(x)
s=cov(x)
re=eigen(s)
lam=re$val
ve=re$vec
print(ve)
f1=2*44/43/45*qf(0.95,2,43)
plot(x)
draw.ellipse(m[1],m[2],sqrt(lam[2]*f1),sqrt(lam[1]*f1),angle=-atan(ve[1,1]/ve[2,1]),deg=FALSE)
mx=c(190,275)
me=m-mx
t1=t(me)%*%solve(s/45)%*%me
t1
f1
library(car)
library(plotrix)
x=read.table("T5-12.DAT")
m=colMeans(x)
s=cov(x)
re=eigen(s)
lam=re$val
ve=re$vec
print(ve)
f1=2*44/43/45*qf(0.95,2,43)
plot(x)
draw.ellipse(m[1],m[2],sqrt(lam[2]*f1),sqrt(lam[1]*f1),angle=-atan(ve[1,1]/ve[2,1]),deg=FALSE)
mx=c(190,275)
me=m-mx
t1=t(me)%*%solve(s/45)%*%me
t1
f1*45
x=read.table("T5-12.DAT")
m=colMeans(x)
s=cov(x)
p=2
n=45
for(i in 1:2){
f1=sqrt(p*(n-1)/(n-p)*qf(0.95,p,n-p))
down=m[i]-f1*sqrt(s[i.i]/n)
up=m[i]+f1*sqrt(s[i.i]/n)
print("the interval is {},{}".format({down},{up}))
x=read.table("T5-12.DAT")
m=colMeans(x)
s=cov(x)
p=2
n=45
for(i in 1:2){
f1=sqrt(p*(n-1)/(n-p)*qf(0.95,p,n-p))
down=m[i]-f1*sqrt(s[i.i]/n)
up=m[i]+f1*sqrt(s[i.i]/n)
print("the interval is {},{}".format(down,up))
x=read.table("T5-12.DAT")
m=colMeans(x)
s=cov(x)
p=2
n=45
for(i in 1:2){
f1=sqrt(p*(n-1)/(n-p)*qf(0.95,p,n-p))
down=m[i]-f1*sqrt(s[i,i]/n)
up=m[i]+f1*sqrt(s[i,i]/n)
print("the interval is {},{}".format(down,up))
x=read.table("T5-12.DAT")
m=colMeans(x)
s=cov(x)
p=2
n=45
for(i in 1:2){
f1=sqrt(p*(n-1)/(n-p)*qf(0.95,p,n-p))
down=m[i]-f1*sqrt(s[i,i]/n)
up=m[i]+f1*sqrt(s[i,i]/n)
print("the interval is {},{}".format({down},{up}))
x=read.table("T5-12.DAT")
m=colMeans(x)
s=cov(x)
p=2
n=45
for(i in 1:2){
f1=sqrt(p*(n-1)/(n-p)*qf(0.95,p,n-p))
down=m[i]-f1*sqrt(s[i,i]/n)
up=m[i]+f1*sqrt(s[i,i]/n)
printf("the interval is {},{}".format({down},{up}))
x=read.table("T5-12.DAT")
m=colMeans(x)
s=cov(x)
p=2
n=45
for(i in 1:2){
f1=sqrt(p*(n-1)/(n-p)*qf(0.95,p,n-p))
down=m[i]-f1*sqrt(s[i,i]/n)
up=m[i]+f1*sqrt(s[i,i]/n)
}
x=read.table("T5-12.DAT")
m=colMeans(x)
s=cov(x)
p=2
n=45
for(i in 1:2){
f1=sqrt(p*(n-1)/(n-p)*qf(0.95,p,n-p))
down=m[i]-f1*sqrt(s[i,i]/n)
up=m[i]+f1*sqrt(s[i,i]/n)
cat("the interval is [",down,",",up,"]\n")
}
knitr::opts_chunk$set(echo = TRUE)
x=read.table("T5-12.DAT")
x=read.table("T5-12.DAT")
library(car)
library(plotrix)
x=read.table("T5-12.DAT")
library(car)
library(plotrix)
x=read.table("T5-12.DAT")
knitr::opts_chunk$set(echo = TRUE)
x=read.table("T5-12.DAT")
library(car)
library(plotrix)
x=read.table("1.DAT")
library(car)
library(plotrix)
getwd()
x=read.table("1.DAT")
getwd()
library(car)
library(plotrix)
getwd()
x=read.table("1.DAT")
library(car)
library(plotrix)
x=read.table("1.DAT")
m=colMeans(x)
s=cov(x)
re=eigen(s)
lam=re$val
ve=re$vec
print(ve)
f1=2*44/43/45*qf(0.95,2,43)
plot(x)
draw.ellipse(m[1],m[2],sqrt(lam[2]*f1),sqrt(lam[1]*f1),angle=-atan(ve[1,1]/ve[2,1]),deg=FALSE)
mx=c(190,275)
me=m-mx
t1=t(me)%*%solve(s/45)%*%me
t1
f1*45
x=read.table("1.DAT")
m=colMeans(x)
s=cov(x)
p=2
n=45
##simultaneous confidence intervals
for(i in 1:2){
f1=sqrt(p*(n-1)/(n-p)*qf(0.95,p,n-p))
down=m[i]-f1*sqrt(s[i,i]/n)
up=m[i]+f1*sqrt(s[i,i]/n)
cat("the simultaneous  interval is [",down,",",up,"]\n")
}
for(i in 1:2){
t1=qt(0.975,n-1)
down=m[i]-t1*sqrt(s[i,i]/n)
up=m[i]+t1*sqrt(s[i,i]/n)
cat("the simultaneous  interval is [",down,",",up,"]\n")
}
x=read.table("1.DAT")
m=colMeans(x)
s=cov(x)
p=2
n=45
##simultaneous confidence intervals
for(i in 1:2){
f1=sqrt(p*(n-1)/(n-p)*qf(0.95,p,n-p))
down=m[i]-f1*sqrt(s[i,i]/n)
up=m[i]+f1*sqrt(s[i,i]/n)
cat("the simultaneous  interval is [",down,",",up,"]\n")
}
for(i in 1:2){
t1=qt(0.95,n-1)
down=m[i]-t1*sqrt(s[i,i]/n)
up=m[i]+t1*sqrt(s[i,i]/n)
cat("the bonferroni  interval is [",down,",",up,"]\n")
}
x=read.table("1.DAT")
m=colMeans(x)
s=cov(x)
p=2
n=45
##simultaneous confidence intervals
for(i in 1:2){
f1=sqrt(p*(n-1)/(n-p)*qf(0.95,p,n-p))
down=m[i]-f1*sqrt(s[i,i]/n)
up=m[i]+f1*sqrt(s[i,i]/n)
cat("the simultaneous  interval is [",down,",",up,"]\n")
}
for(i in 1:2){
t1=qt(0.9875,n-1)
down=m[i]-t1*sqrt(s[i,i]/n)
up=m[i]+t1*sqrt(s[i,i]/n)
cat("the bonferroni  interval is [",down,",",up,"]\n")
}
for(i in 1:2){
b<-qqnorm(x[i])
x1<-b$x
y1<-b$y
print(cor(x1,y1))
}
x=read.table("1.DAT")
for(i in 1:2){
b<-qqnorm(x[i])
x1<-b$x
y1<-b$y
print(cor(x1,y1))
}
x=read.table("1.DAT")
for(i in 1:2){
b<-qqnorm(x[i])
}
x=read.table("1.DAT")
for(i in 1:2){
b<-qqnorm(x[,i])
x1<-b$x
y1<-b$y
print(cor(x1,y1))
}
plot(x)
knitr::opts_chunk$set(echo = TRUE)
library(car)
library(plotrix)
x=read.table("5-12.DAT")
knitr::opts_chunk$set(echo = TRUE)
library(car)
library(plotrix)
x=read.table("5-12.DAT")
