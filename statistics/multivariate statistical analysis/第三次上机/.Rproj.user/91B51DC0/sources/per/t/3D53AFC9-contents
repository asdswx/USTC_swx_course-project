---
title: "舒文炫PB18000029_第三次上机"
author: "舒文炫"
date: "2021/4/20"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## 4.39

### (a)
```{r }
x=read.table("T4-6.DAT")
r=c(0,0,0,0,0)
for(i in 1:5){
  b<-qqnorm(x[,i])
  qqline(x[,i])
  x1<-b$x
  y1<-b$y
  r[i]=cor(x1,y1)
}
r

```

n=130 临界值为0.990，在百分之5的显著水平下
从而检验得，independent, support, leader不满足正态性


### (b)
```{r x}
m=colMeans(x[,1:5])
xm=x[,1:5]-c(rep(1,times=length(x[,1])))%*%t(c(rep(1,times=5)))%*%diag(m)
s=cov(x[,1:5])
xm=t(xm)
d=t(xm)%*%solve(s)%*%xm
d=diag(d)
d=d[order(d)]
q<-qchisq(seq(1/260,259/260,1/130),5)
plot(d,q)
r1=cor(d,q)
r1
```

###(c)
```{r }
library(MASS)
y=x[,c(1,2,5)]
qwq<-c(0,0,0)
qaq<-c(0,0,0)
for (i in 1:3){
  bo<-boxcox(y[,i]~1)
  x2<-bo$x
  y2<-bo$y
 lik<-cbind(x2,y2)
 lik<-lik[order(-y2),]
  qwq[i]=lik[1,1]
}
for(i in 1:3){
  b<-qqnorm(y[,i]^qwq[i])
  qqline(y[,i]^qwq[i])
  x1<-b$x
  y1<-b$y
  qaq[i]=cor(x1,y1)
}
qaq
```


##4.41

### (a)
```{r }
x<-read.table("T3-2.DAT")
plot(x,xlab="duration",ylab="numbers of hours")
fit<-lm(x[,2]~x[,1])
fit
abline(a=10.296,b=0.9529)
```

outlier can be (17.5,42.3)

### (b)&(c)

我们先检验一下正态性如何：

```{r}
x=read.table("T3-2.DAT")
rq1<-c(0,0)
for(i in 1:2){
  b<-qqnorm(x[,i])
  qqline(x[,i])
  x1<-b$x
  y1<-b$y
  rq1[i]=cor(x1,y1)
}
rq1
```

结果并不好，百分之5显著水平下为0.9591，下面我们做变换：

```{r x}
lambda=c(0,0)
library(MASS)
for(i in 1:2){
  b<-boxcox(x[,i]~1)
  x1<-b$x
  y1<-b$y
  lik<-cbind(x1,y1)
 lik<-lik[order(-y1),]
  lambda[i]=lik[1,1]
}
lambda
```
变换的系数分别为0.061,-0.707

```{r lambda}
x=read.table("T3-2.DAT")
rq2<-c(0,0)
for(i in 1:2){
  b<-qqnorm(x[,i]^lambda[i])
  qqline(x[,i]^lambda[i])
  x1<-b$x
  y1<-b$y
  rq2[i]=cor(x1,y1)
}
rq2
```

### (d)
```{r }
## chi-square before
x<-read.table("T3-2.DAT")
m=colMeans(x)
xm=x-c(rep(1,times=length(x[,1])))%*%t(c(rep(1,times=2)))%*%diag(m)
s=cov(x)
xm=t(xm)
d=t(xm)%*%solve(s)%*%xm
d=diag(d)
d=d[order(d)]
q<-qchisq(seq(1/50,49/50,1/25),2)
plot(q,d)
r1=cor(q,d)
r1

## transform
normal<-function(lambda){
  u1<-lambda[1]
  u2<-lambda[2]
  n=length(x1)
ifelse(u1==0,i1<-log(x[,1]),i1<-(x[,1]^u1-1)/u1)
ifelse(u2==0,i2<-log(x[,2]),i2<-(x[,2]^u2-1)/u2)
i=cbind(i1,i2)
L=-n/2*log(det((n-1)*cov(i)/n))+(u1-1)*sum(log(x[,1]))+(u2-1)*sum(log(x[,2]))
 return(-L)
}
result<-optim(par=c(1,1),normal)
result

## draw chi-square plot after
y=cbind(x[,1]^0.24,x[,2]^(-0.64))
m=colMeans(y)
ym=y-c(rep(1,times=length(x[,1])))%*%t(c(rep(1,times=2)))%*%diag(m)
s=cov(y)
ym=t(ym)
d=t(ym)%*%solve(s)%*%ym
d=diag(d)
d=d[order(d)]
q<-qchisq(seq(1/50,49/50,1/25),2)
plot(q,d)
r1=cor(q,d)
r1
```
