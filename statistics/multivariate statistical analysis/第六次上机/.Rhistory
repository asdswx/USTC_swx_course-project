knitr::opts_chunk$set(echo = TRUE)
x=read.table("T6-9.DAT")
View(x)
x=read.table("T6-9.DAT")
x1=x[c(1:24),c(1:3)]
x1=x[c(25:48),c(1:3)]
x=read.table("T6-9.DAT")
x1=x[c(1:24),c(1:3)]
x2=x[c(25:48),c(1:3)]
x=read.table("T6-9.DAT")
x1=log(x[c(1:24),c(1:3)])
x2=log(x[c(25:48),c(1:3)])
n1=24
n2=24
m1=colMeans(x1)
m2=colMeans(x2)
s1=cov(X1)
x=read.table("T6-9.DAT")
x1=log(x[c(1:24),c(1:3)])
x2=log(x[c(25:48),c(1:3)])
n1=24
n2=24
m1=colMeans(x1)
m2=colMeans(x2)
s1=cov(x1)
s2=cov(x2)
spolled=((n1-1)*s1+(n2-1)*s2)/(n1+n2-2)
t=t(m1-m2)%*%solve(spolled*(1/n1+1/n2))%*%(m1-m2)
x=read.table("T6-9.DAT")
x1=log(x[c(1:24),c(1:3)])
x2=log(x[c(25:48),c(1:3)])
n1=24
n2=24
p=3
m1=colMeans(x1)
m2=colMeans(x2)
s1=cov(x1)
s2=cov(x2)
spolled=((n1-1)*s1+(n2-1)*s2)/(n1+n2-2)
t=t(m1-m2)%*%solve(spolled*(1/n1+1/n2))%*%(m1-m2)
f=(n1+n2-2)*p/(n1+n2-p-1)*qf(0.95,p,n1+n2-p-1)
t
f
x=read.table("T6-9.DAT")
x1=log(x[c(1:24),c(1:3)])
x2=log(x[c(25:48),c(1:3)])
n1=24
n2=24
p=3
m1=colMeans(x1)
m2=colMeans(x2)
s1=cov(x1)
s2=cov(x2)
spolled=((n1-1)*s1+(n2-1)*s2)/(n1+n2-2)
t=t(m1-m2)%*%solve(spolled*(1/n1+1/n2))%*%(m1-m2)
f=(n1+n2-2)*p/(n1+n2-p-1)*qf(0.95,p,n1+n2-p-1)
print("the value of t is {}".format({t}))
x=read.table("T6-9.DAT")
x1=log(x[c(1:24),c(1:3)])
x2=log(x[c(25:48),c(1:3)])
n1=24
n2=24
p=3
m1=colMeans(x1)
m2=colMeans(x2)
s1=cov(x1)
s2=cov(x2)
spolled=((n1-1)*s1+(n2-1)*s2)/(n1+n2-2)
t=t(m1-m2)%*%solve(spolled*(1/n1+1/n2))%*%(m1-m2)
f=(n1+n2-2)*p/(n1+n2-p-1)*qf(0.95,p,n1+n2-p-1)
sprintf("the value of t is %d",t)
x=read.table("T6-9.DAT")
x1=log(x[c(1:24),c(1:3)])
x2=log(x[c(25:48),c(1:3)])
n1=24
n2=24
p=3
m1=colMeans(x1)
m2=colMeans(x2)
s1=cov(x1)
s2=cov(x2)
spolled=((n1-1)*s1+(n2-1)*s2)/(n1+n2-2)
t=t(m1-m2)%*%solve(spolled*(1/n1+1/n2))%*%(m1-m2)
f=(n1+n2-2)*p/(n1+n2-p-1)*qf(0.95,p,n1+n2-p-1)
sprintf("the value of t is %f",t)
sprintf("the value of f is %f",f)
x=read.table("T6-9.DAT")
x1=log(x[c(1:24),c(1:3)])
x2=log(x[c(25:48),c(1:3)])
n1=24
n2=24
p=3
m1=colMeans(x1)
m2=colMeans(x2)
s1=cov(x1)
s2=cov(x2)
spolled=((n1-1)*s1+(n2-1)*s2)/(n1+n2-2)
t=t(m1-m2)%*%solve(spolled*(1/n1+1/n2))%*%(m1-m2)
f=(n1+n2-2)*p/(n1+n2-p-1)*qf(0.95,p,n1+n2-p-1)
sprintf("the value of t is %f",t)
sprintf("the value of f is %f",f)
vec=solve(spolled)%*%(m1-m2)
print(vec)
x=read.table("T6-9.DAT")
x1=log(x[c(1:24),c(1:3)])
x2=log(x[c(25:48),c(1:3)])
n1=24
n2=24
p=3
m1=colMeans(x1)
m2=colMeans(x2)
s1=cov(x1)
s2=cov(x2)
spolled=((n1-1)*s1+(n2-1)*s2)/(n1+n2-2)
t=t(m1-m2)%*%solve(spolled*(1/n1+1/n2))%*%(m1-m2)
f=(n1+n2-2)*p/(n1+n2-p-1)*qf(0.95,p,n1+n2-p-1)
sprintf("the value of t is %f",t)
sprintf("the value of f is %f",f)
m=m1-m2
vec=solve(spolled)%*%(m1-m2)
print(vec)
c=sqrt(f)
for(i in c(1:3)){
up<-m[i]+c*sqrt((1/n1+1/n2)*spolled[i,i])
down<-m[i]-c*sqrt((1/n1+1/n2)*spolled[i,i])
sprintf("the simultaneous itervals is[%f,%f]",up,down)
}
x=read.table("T6-9.DAT")
x1=log(x[c(1:24),c(1:3)])
x2=log(x[c(25:48),c(1:3)])
n1=24
n2=24
p=3
m1=colMeans(x1)
m2=colMeans(x2)
s1=cov(x1)
s2=cov(x2)
spolled=((n1-1)*s1+(n2-1)*s2)/(n1+n2-2)
t=t(m1-m2)%*%solve(spolled*(1/n1+1/n2))%*%(m1-m2)
f=(n1+n2-2)*p/(n1+n2-p-1)*qf(0.95,p,n1+n2-p-1)
sprintf("the value of t is %f",t)
sprintf("the value of f is %f",f)
m=m1-m2
vec=solve(spolled)%*%(m1-m2)
print(vec)
c=sqrt(f)
for(i in c(1:3)){
up<-m[i]+c*sqrt((1/n1+1/n2)*spolled[i,i])
down<-m[i]-c*sqrt((1/n1+1/n2)*spolled[i,i])
sprintf("the simultaneous itervals is%f,%f",up,down)
}
x=read.table("T6-9.DAT")
x1=log(x[c(1:24),c(1:3)])
x2=log(x[c(25:48),c(1:3)])
n1=24
n2=24
p=3
m1=colMeans(x1)
m2=colMeans(x2)
s1=cov(x1)
s2=cov(x2)
spolled=((n1-1)*s1+(n2-1)*s2)/(n1+n2-2)
t=t(m1-m2)%*%solve(spolled*(1/n1+1/n2))%*%(m1-m2)
f=(n1+n2-2)*p/(n1+n2-p-1)*qf(0.95,p,n1+n2-p-1)
sprintf("the value of t is %f",t)
sprintf("the value of f is %f",f)
m=m1-m2
vec=solve(spolled)%*%(m1-m2)
print(vec)
c=sqrt(f)
for(i in c(1:3)){
up<-m[i]+c*sqrt((1/n1+1/n2)*spolled[i,i])
down<-m[i]-c*sqrt((1/n1+1/n2)*spolled[i,i])
cat("the simultaneous  interval is [",down,",",up,"]\n")
}
x=read.table("T6-9.DAT")
x1=log(x[c(1:24),c(1:3)])
x2=log(x[c(25:48),c(1:3)])
n1=24
n2=24
p=3
m1=colMeans(x1)
m2=colMeans(x2)
s1=cov(x1)
s2=cov(x2)
spolled=((n1-1)*s1+(n2-1)*s2)/(n1+n2-2)
t=t(m1-m2)%*%solve(spolled*(1/n1+1/n2))%*%(m1-m2)
f=(n1+n2-2)*p/(n1+n2-p-1)*qf(0.95,p,n1+n2-p-1)
sprintf("the value of t is %f",t)
sprintf("the value of f is %f",f)
m=m1-m2
vec=solve(spolled)%*%(m1-m2)
print(vec)
c=sqrt(f)
for(i in c(1:3)){
up<-m[i]+c*sqrt((1/n1+1/n2)*spolled[i,i])
down<-m[i]-c*sqrt((1/n1+1/n2)*spolled[i,i])
cat("the simultaneous  interval is [",down,",",up,"]\n")
}
d=qt(1-0.05/2/p,n1+n2-2)
for(i in c(1:3)){
up<-m[i]+d*sqrt((1/n1+1/n2)*spolled[i,i])
down<-m[i]-d*sqrt((1/n1+1/n2)*spolled[i,i])
cat("the bonferroni  interval is [",down,",",up,"]\n")
}
x=read.table("T6-9.DAT")
x1=log(x[c(1:24),c(1:3)])
x2=log(x[c(25:48),c(1:3)])
n1=24
n2=24
p=3
m1=colMeans(x1)
m2=colMeans(x2)
s1=cov(x1)
s2=cov(x2)
##我们先检验一下正态性
for(i in 1:3){
b<-qqnorm(x1[,i])
x1<-b$x
y1<-b$y
print(cor(x1,y1))
}
x=read.table("T6-9.DAT")
x1=log(x[c(1:24),c(1:3)])
x2=log(x[c(25:48),c(1:3)])
n1=24
n2=24
p=3
m1=colMeans(x1)
m2=colMeans(x2)
s1=cov(x1)
s2=cov(x2)
##我们先检验一下正态性
for(i in 1:3){
b<-qqnorm(x1[,i])
xq<-b$x
yq<-b$y
print(cor(xq,yq))
}
for(i in 1:3){
b<-qqnorm(x2[,i])
xq<-b$x
yq<-b$y
print(cor(xq,yq))
}
spolled=((n1-1)*s1+(n2-1)*s2)/(n1+n2-2)
t=t(m1-m2)%*%solve(spolled*(1/n1+1/n2))%*%(m1-m2)
f=(n1+n2-2)*p/(n1+n2-p-1)*qf(0.95,p,n1+n2-p-1)
sprintf("the value of t is %f",t)
sprintf("the value of f is %f",f)
m=m1-m2
vec=solve(spolled)%*%(m1-m2)
print(vec)
c=sqrt(f)
for(i in c(1:3)){
up<-m[i]+c*sqrt((1/n1+1/n2)*spolled[i,i])
down<-m[i]-c*sqrt((1/n1+1/n2)*spolled[i,i])
cat("the simultaneous  interval is [",down,",",up,"]\n")
}
d=qt(1-0.05/2/p,n1+n2-2)
for(i in c(1:3)){
up<-m[i]+d*sqrt((1/n1+1/n2)*spolled[i,i])
down<-m[i]-d*sqrt((1/n1+1/n2)*spolled[i,i])
cat("the bonferroni  interval is [",down,",",up,"]\n")
}
knitr::opts_chunk$set(echo = TRUE)
x=read.table("T6-9.DAT")
x1=log(x[c(1:24),c(1:3)])
x2=log(x[c(25:48),c(1:3)])
n1=24
n2=24
p=3
m1=colMeans(x1)
m2=colMeans(x2)
s1=cov(x1)
s2=cov(x2)
##我们先检验一下正态性
for(i in 1:3){
b<-qqnorm(x1[,i])
xq<-b$x
yq<-b$y
print(cor(xq,yq))
}
for(i in 1:3){
b<-qqnorm(x2[,i])
xq<-b$x
yq<-b$y
print(cor(xq,yq))
}
##检验等均值
spolled=((n1-1)*s1+(n2-1)*s2)/(n1+n2-2)
t=t(m1-m2)%*%solve(spolled*(1/n1+1/n2))%*%(m1-m2)
f=(n1+n2-2)*p/(n1+n2-p-1)*qf(0.95,p,n1+n2-p-1)
sprintf("the value of t is %f",t)
sprintf("the value of f is %f",f)
m=m1-m2
vec=solve(spolled)%*%(m1-m2)
print(vec)
c=sqrt(f)
for(i in c(1:3)){
up<-m[i]+c*sqrt((1/n1+1/n2)*spolled[i,i])
down<-m[i]-c*sqrt((1/n1+1/n2)*spolled[i,i])
cat("the simultaneous  interval is [",down,",",up,"]\n")
}
d=qt(1-0.05/2/p,n1+n2-2)
for(i in c(1:3)){
up<-m[i]+d*sqrt((1/n1+1/n2)*spolled[i,i])
down<-m[i]-d*sqrt((1/n1+1/n2)*spolled[i,i])
cat("the bonferroni  interval is [",down,",",up,"]\n")
}
