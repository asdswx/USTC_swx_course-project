m2=c(rep(200,times=length(x[,3])))/x[,3]
m3=c(rep(400,times=length(x[,4])))/x[,4]
m4=c(rep(800,times=length(x[,5])))/(x[,5]*60)
m5=c(rep(1500,times=length(x[,6])))/(x[,6]*60)
m6=c(rep(3000,times=length(x[,7])))/(x[,7]*60)
m7=c(rep(42195,times=length(x[,8])))/(x[,8]*60)
m=cbind(m1,m2,m3,m4,m5,m6,m7)
##100m正态性检验
b<-qqnorm(m1)
x1<-b$x
y1<-b$y
r1<-cor(x1,y1)
x=read.table("T1-9.dat")
m1=c(rep(100,times=length(x[,2])))/x[,2]
m2=c(rep(200,times=length(x[,3])))/x[,3]
m3=c(rep(400,times=length(x[,4])))/x[,4]
m4=c(rep(800,times=length(x[,5])))/(x[,5]*60)
m5=c(rep(1500,times=length(x[,6])))/(x[,6]*60)
m6=c(rep(3000,times=length(x[,7])))/(x[,7]*60)
m7=c(rep(42195,times=length(x[,8])))/(x[,8]*60)
m=cbind(m1,m2,m3,m4,m5,m6,m7)
##100m正态性检验
b<-qqnorm(m1)
x1<-b$x
y1<-b$y
r1<-cor(x1,y1)
r1
x=read.table("T1-9.dat")
m1=c(rep(100,times=length(x[,2])))/x[,2]
m2=c(rep(200,times=length(x[,3])))/x[,3]
m3=c(rep(400,times=length(x[,4])))/x[,4]
m4=c(rep(800,times=length(x[,5])))/(x[,5]*60)
m5=c(rep(1500,times=length(x[,6])))/(x[,6]*60)
m6=c(rep(3000,times=length(x[,7])))/(x[,7]*60)
m7=c(rep(42195,times=length(x[,8])))/(x[,8]*60)
m=cbind(m1,m2,m3,m4,m5,m6,m7)
##100m正态性检验
b<-qqnorm(m1)
x1<-b$x
y1<-b$y
r1<-cor(x1,y1)
r1
##200m正态性检验
b<-qqnorm(m2)
x1<-b$x
y1<-b$y
r2<-cor(x1,y1)
r2
##400m正态性检验
b<-qqnorm(m3)
x1<-b$x
y1<-b$y
r3<-cor(x1,y1)
r3
##800m正态性检验
b<-qqnorm(m4)
x1<-b$x
y1<-b$y
r4<-cor(x1,y1)
r4
##1500m正态性检验
b<-qqnorm(m5)
x1<-b$x
y1<-b$y
r5<-cor(x1,y1)
r5
##3000m正态性检验
b<-qqnorm(m6)
x1<-b$x
y1<-b$y
r6<-cor(x1,y1)
r6
##marathon正态性检验
b<-qqnorm(m7)
x1<-b$x
y1<-b$y
r7<-cor(x1,y1)
r7
x=read.table("T1-9.dat")
m1=c(rep(100,times=length(x[,2])))/x[,2]
m2=c(rep(200,times=length(x[,3])))/x[,3]
m3=c(rep(400,times=length(x[,4])))/x[,4]
m4=c(rep(800,times=length(x[,5])))/(x[,5]*60)
m5=c(rep(1500,times=length(x[,6])))/(x[,6]*60)
m6=c(rep(3000,times=length(x[,7])))/(x[,7]*60)
m7=c(rep(42195,times=length(x[,8])))/(x[,8]*60)
m=cbind(m1,m2,m3,m4,m5,m6,m7)
##100m正态性检验
b<-qqnorm(m1)
x1<-b$x
y1<-b$y
r1<-cor(x1,y1)
r1
##200m正态性检验
b<-qqnorm(m2)
x1<-b$x
y1<-b$y
r2<-cor(x1,y1)
r2
##400m正态性检验
b<-qqnorm(m3)
x1<-b$x
y1<-b$y
r3<-cor(x1,y1)
r3
##800m正态性检验
b<-qqnorm(m4)
x1<-b$x
y1<-b$y
r4<-cor(x1,y1)
r4
##1500m正态性检验
b<-qqnorm(m5)
x1<-b$x
y1<-b$y
r5<-cor(x1,y1)
r5
##3000m正态性检验
b<-qqnorm(m6)
x1<-b$x
y1<-b$y
r6<-cor(x1,y1)
r6
##marathon正态性检验
b<-qqnorm(m7)
x1<-b$x
y1<-b$y
r7<-cor(x1,y1)
r7
length(m7)
x1<- c(1,2,3,3,4,5,6,8,9,11)
x4<- c(18.95,19,17.95,15.54,14,12.95,8.94,7.49,6,3.99)
normal<-function(lambda){
u1<-lambda[1]
u2<-lambda[2]
n=length(x1)
cons1=matrix(c(rep(1,times=n)),nrow=1,ncol=n)
ifelse(u1==0,i1<-log(x1),i1<-(x1^u1-1)/u1)
ifelse(u2==0,i2<-log(x4),i2<-(x4^u2-1)/u2)
i=cbind(i1,i2)
L=-n/2*log(det((n-1)*cov(i)/n))+(u1-1)*sum(log(x1))+(u2-1)*sum(log(x4))
return(-L)
}
result<-optim(par=c(0.37,0.94),normal)
result
normal(0.7,1.2)
x1<- c(1,2,3,3,4,5,6,8,9,11)
x4<- c(18.95,19,17.95,15.54,14,12.95,8.94,7.49,6,3.99)
normal<-function(lambda){
u1<-lambda[1]
u2<-lambda[2]
n=length(x1)
cons1=matrix(c(rep(1,times=n)),nrow=1,ncol=n)
ifelse(u1==0,i1<-log(x1),i1<-(x1^u1-1)/u1)
ifelse(u2==0,i2<-log(x4),i2<-(x4^u2-1)/u2)
i=cbind(i1,i2)
L=-n/2*log(det((n-1)*cov(i)/n))+(u1-1)*sum(log(x1))+(u2-1)*sum(log(x4))
return(-L)
}
result<-optim(par=c(0.37,0.94),normal)
result
normal(c(0.7,1.2))
rchisq(c(1,2),7,ncp=0)
rchisq(seq(0.05,0.95,0.1),2,ncp=0)
dchisq(seq(0.05,0.95,0.1),2,ncp=0)
qchisq(seq(0.05,0.95,0.1),2,ncp=0)
qchisq(seq(1/108,107/108,1/54),7,ncp=0)
x=read.table("T1-9.dat")
m1=c(rep(100,times=length(x[,2])))/x[,2]
m2=c(rep(200,times=length(x[,3])))/x[,3]
m3=c(rep(400,times=length(x[,4])))/x[,4]
m4=c(rep(800,times=length(x[,5])))/(x[,5]*60)
m5=c(rep(1500,times=length(x[,6])))/(x[,6]*60)
m6=c(rep(3000,times=length(x[,7])))/(x[,7]*60)
m7=c(rep(42195,times=length(x[,8])))/(x[,8]*60)
m=cbind(m1,m2,m3,m4,m5,m6,m7)
##100m正态性检验
b<-qqnorm(m1)
x1<-b$x
y1<-b$y
r1<-cor(x1,y1)
r1
##200m正态性检验
b<-qqnorm(m2)
x1<-b$x
y1<-b$y
r2<-cor(x1,y1)
r2
##400m正态性检验
b<-qqnorm(m3)
x1<-b$x
y1<-b$y
r3<-cor(x1,y1)
r3
##800m正态性检验
b<-qqnorm(m4)
x1<-b$x
y1<-b$y
r4<-cor(x1,y1)
r4
##1500m正态性检验
b<-qqnorm(m5)
x1<-b$x
y1<-b$y
r5<-cor(x1,y1)
r5
##3000m正态性检验
b<-qqnorm(m6)
x1<-b$x
y1<-b$y
r6<-cor(x1,y1)
r6
##marathon正态性检验
b<-qqnorm(m7)
x1<-b$x
y1<-b$y
r7<-cor(x1,y1)
r7
##多元正态性检验
xm=colMeans(m)
xm<-matrix(rep(1,times=length(m[1,])*length(m[,1])),nrow=length(m[,1]),ncol=length(m[1,]))%*%diag(xm)
d=(m-xm)%*%solve(cov(m)*(length(m1)-1)*length(m1))%*%t(m-xm)
d<-diag(d)
q<-qchisq(seq(1/108,107/108,1/54),7,ncp=0)
d<-d[order(d)]
r8<-cor(d,q)
x=read.table("T1-9.dat")
m1=c(rep(100,times=length(x[,2])))/x[,2]
m2=c(rep(200,times=length(x[,3])))/x[,3]
m3=c(rep(400,times=length(x[,4])))/x[,4]
m4=c(rep(800,times=length(x[,5])))/(x[,5]*60)
m5=c(rep(1500,times=length(x[,6])))/(x[,6]*60)
m6=c(rep(3000,times=length(x[,7])))/(x[,7]*60)
m7=c(rep(42195,times=length(x[,8])))/(x[,8]*60)
m=cbind(m1,m2,m3,m4,m5,m6,m7)
##100m正态性检验
b<-qqnorm(m1)
x1<-b$x
y1<-b$y
r1<-cor(x1,y1)
r1
##200m正态性检验
b<-qqnorm(m2)
x1<-b$x
y1<-b$y
r2<-cor(x1,y1)
r2
##400m正态性检验
b<-qqnorm(m3)
x1<-b$x
y1<-b$y
r3<-cor(x1,y1)
r3
##800m正态性检验
b<-qqnorm(m4)
x1<-b$x
y1<-b$y
r4<-cor(x1,y1)
r4
##1500m正态性检验
b<-qqnorm(m5)
x1<-b$x
y1<-b$y
r5<-cor(x1,y1)
r5
##3000m正态性检验
b<-qqnorm(m6)
x1<-b$x
y1<-b$y
r6<-cor(x1,y1)
r6
##marathon正态性检验
b<-qqnorm(m7)
x1<-b$x
y1<-b$y
r7<-cor(x1,y1)
r7
##多元正态性检验
xm=colMeans(m)
xm<-matrix(rep(1,times=length(m[1,])*length(m[,1])),nrow=length(m[,1]),ncol=length(m[1,]))%*%diag(xm)
d=(m-xm)%*%solve(cov(m)*(length(m1)-1)*length(m1))%*%t(m-xm)
d<-diag(d)
q<-qchisq(seq(1/108,107/108,1/54),7,ncp=0)
d<-d[order(d)]
plot(q,d)
r8<-cor(d,q)
View(xm)
x=read.table("T1-9.dat")
m1=c(rep(100,times=length(x[,2])))/x[,2]
m2=c(rep(200,times=length(x[,3])))/x[,3]
m3=c(rep(400,times=length(x[,4])))/x[,4]
m4=c(rep(800,times=length(x[,5])))/(x[,5]*60)
m5=c(rep(1500,times=length(x[,6])))/(x[,6]*60)
m6=c(rep(3000,times=length(x[,7])))/(x[,7]*60)
m7=c(rep(42195,times=length(x[,8])))/(x[,8]*60)
m=cbind(m1,m2,m3,m4,m5,m6,m7)
##100m正态性检验
b<-qqnorm(m1)
x1<-b$x
y1<-b$y
r1<-cor(x1,y1)
r1
##200m正态性检验
b<-qqnorm(m2)
x1<-b$x
y1<-b$y
r2<-cor(x1,y1)
r2
##400m正态性检验
b<-qqnorm(m3)
x1<-b$x
y1<-b$y
r3<-cor(x1,y1)
r3
##800m正态性检验
b<-qqnorm(m4)
x1<-b$x
y1<-b$y
r4<-cor(x1,y1)
r4
##1500m正态性检验
b<-qqnorm(m5)
x1<-b$x
y1<-b$y
r5<-cor(x1,y1)
r5
##3000m正态性检验
b<-qqnorm(m6)
x1<-b$x
y1<-b$y
r6<-cor(x1,y1)
r6
##marathon正态性检验
b<-qqnorm(m7)
x1<-b$x
y1<-b$y
r7<-cor(x1,y1)
r7
##多元正态性检验
xm=colMeans(m)
xm<-matrix(rep(1,times=length(m[1,])*length(m[,1])),nrow=length(m[,1]),ncol=length(m[1,]))%*%diag(xm)
d=(m-xm)%*%solve(cov(m)*(length(m1)-1)/length(m1))%*%t(m-xm)
d<-diag(d)
q<-qchisq(seq(1/108,107/108,1/54),7,ncp=0)
d<-d[order(d)]
plot(q,d)
r8<-cor(d,q)
r8
knitr::opts_chunk$set(echo = TRUE)
x1<- c(1,2,3,3,4,5,6,8,9,11)
x4<- c(18.95,19,17.95,15.54,14,12.95,8.94,7.49,6,3.99)
normal<-function(lambda){
u1<-lambda[1]
u2<-lambda[2]
n=length(x1)
ifelse(u1==0,i1<-log(x1),i1<-(x1^u1-1)/u1)
ifelse(u2==0,i2<-log(x4),i2<-(x4^u2-1)/u2)
i=cbind(i1,i2)
L=-n/2*log(det((n-1)*cov(i)/n))+(u1-1)*sum(log(x1))+(u2-1)*sum(log(x4))
return(-L)
}
result<-optim(par=c(0.37,0.94),normal，lower=0.5,upper=2)
x1<- c(1,2,3,3,4,5,6,8,9,11)
x4<- c(18.95,19,17.95,15.54,14,12.95,8.94,7.49,6,3.99)
normal<-function(lambda){
u1<-lambda[1]
u2<-lambda[2]
n=length(x1)
ifelse(u1==0,i1<-log(x1),i1<-(x1^u1-1)/u1)
ifelse(u2==0,i2<-log(x4),i2<-(x4^u2-1)/u2)
i=cbind(i1,i2)
L=-n/2*log(det((n-1)*cov(i)/n))+(u1-1)*sum(log(x1))+(u2-1)*sum(log(x4))
return(-L)
}
result<-optim(par=c(0.37,0.94),normal，lower=c(0.5,0.5),upper=c(2,2)
x1<- c(1,2,3,3,4,5,6,8,9,11)
x4<- c(18.95,19,17.95,15.54,14,12.95,8.94,7.49,6,3.99)
normal<-function(lambda){
u1<-lambda[1]
u2<-lambda[2]
n=length(x1)
ifelse(u1==0,i1<-log(x1),i1<-(x1^u1-1)/u1)
ifelse(u2==0,i2<-log(x4),i2<-(x4^u2-1)/u2)
i=cbind(i1,i2)
L=-n/2*log(det((n-1)*cov(i)/n))+(u1-1)*sum(log(x1))+(u2-1)*sum(log(x4))
return(-L)
}
result<-optim(par=c(0.37,0.94),normal,lower=c(0.5,0.5),upper=c(2,2)
result
x1<- c(1,2,3,3,4,5,6,8,9,11)
x4<- c(18.95,19,17.95,15.54,14,12.95,8.94,7.49,6,3.99)
normal<-function(lambda){
u1<-lambda[1]
u2<-lambda[2]
n=length(x1)
ifelse(u1==0,i1<-log(x1),i1<-(x1^u1-1)/u1)
ifelse(u2==0,i2<-log(x4),i2<-(x4^u2-1)/u2)
i=cbind(i1,i2)
L=-n/2*log(det((n-1)*cov(i)/n))+(u1-1)*sum(log(x1))+(u2-1)*sum(log(x4))
return(-L)
}
result<-optim(par=c(0.37,0.94),normal,lower=c(0.5,0.5),upper=c(2,2))
result
x1<- c(1,2,3,3,4,5,6,8,9,11)
x4<- c(18.95,19,17.95,15.54,14,12.95,8.94,7.49,6,3.99)
normal<-function(lambda){
u1<-lambda[1]
u2<-lambda[2]
n=length(x1)
ifelse(u1==0,i1<-log(x1),i1<-(x1^u1-1)/u1)
ifelse(u2==0,i2<-log(x4),i2<-(x4^u2-1)/u2)
i=cbind(i1,i2)
L=-n/2*log(det((n-1)*cov(i)/n))+(u1-1)*sum(log(x1))+(u2-1)*sum(log(x4))
return(-L)
}
result<-optim(par=c(0.37,0.94),normal,lower=c(0.3,0.3),upper=c(2,2))
result
x1<- c(1,2,3,3,4,5,6,8,9,11)
x4<- c(18.95,19,17.95,15.54,14,12.95,8.94,7.49,6,3.99)
normal<-function(lambda){
u1<-lambda[1]
u2<-lambda[2]
n=length(x1)
ifelse(u1==0,i1<-log(x1),i1<-(x1^u1-1)/u1)
ifelse(u2==0,i2<-log(x4),i2<-(x4^u2-1)/u2)
i=cbind(i1,i2)
L=-n/2*log(det((n-1)*cov(i)/n))+(u1-1)*sum(log(x1))+(u2-1)*sum(log(x4))
return(-L)
}
result<-optim(par=c(0.37,0.94),normal,lower=c(0.7,0.7),upper=c(2,2))
result
x1<- c(1,2,3,3,4,5,6,8,9,11)
x4<- c(18.95,19,17.95,15.54,14,12.95,8.94,7.49,6,3.99)
normal<-function(lambda){
u1<-lambda[1]
u2<-lambda[2]
n=length(x1)
ifelse(u1==0,i1<-log(x1),i1<-(x1^u1-1)/u1)
ifelse(u2==0,i2<-log(x4),i2<-(x4^u2-1)/u2)
i=cbind(i1,i2)
L=-n/2*log(det((n-1)*cov(i)/n))+(u1-1)*sum(log(x1))+(u2-1)*sum(log(x4))
return(-L)
}
result<-optim(par=c(1,1),normal,lower=c(0.7,0.7),upper=c(2,2))
result
x1<- c(1,2,3,3,4,5,6,8,9,11)
x4<- c(18.95,19,17.95,15.54,14,12.95,8.94,7.49,6,3.99)
normal<-function(lambda){
u1<-lambda[1]
u2<-lambda[2]
n=length(x1)
ifelse(u1==0,i1<-log(x1),i1<-(x1^u1-1)/u1)
ifelse(u2==0,i2<-log(x4),i2<-(x4^u2-1)/u2)
i=cbind(i1,i2)
L=-n/2*log(det((n-1)*cov(i)/n))+(u1-1)*sum(log(x1))+(u2-1)*sum(log(x4))
return(-L)
}
result<-optim(par=c(1,1),normal)
result
x1<- c(1,2,3,3,4,5,6,8,9,11)
x4<- c(18.95,19,17.95,15.54,14,12.95,8.94,7.49,6,3.99)
normal<-function(lambda){
u1<-lambda[1]
u2<-lambda[2]
n=length(x1)
ifelse(u1==0,i1<-log(x1),i1<-x1^u1)
ifelse(u2==0,i2<-log(x4),i2<-x4^u2)
i=cbind(i1,i2)
L=-n/2*log(det((n-1)*cov(i)/n))+(u1-1)*sum(log(x1))+(u2-1)*sum(log(x4))
return(-L)
}
result<-optim(par=c(1,1),normal)
result
x1<- c(1,2,3,3,4,5,6,8,9,11)
x4<- c(18.95,19,17.95,15.54,14,12.95,8.94,7.49,6,3.99)
normal<-function(lambda){
u1<-lambda[1]
u2<-lambda[2]
n=length(x1)
ifelse(u1==0,i1<-log(x1),i1<-(x1^u1-1)/u1)
ifelse(u2==0,i2<-log(x4),i2<-(x4^u2-1)/u2)
i=cbind(i1,i2)
L=-n/2*log(det((n-1)*cov(i)/n))+(u1-1)*sum(log(x1))+(u2-1)*sum(log(x4))
return(-L)
}
result<-optim(par=c(1,1),normal)
result
x1<- c(1,2,3,3,4,5,6,8,9,11)
x4<- c(18.95,19,17.95,15.54,14,12.95,8.94,7.49,6,3.99)
n=length(x1)
normal<-function(lambda){
u1<-lambda[1]
u2<-lambda[2]
ifelse(u1==0,i1<-log(x1),i1<-(x1^u1-1)/u1)
ifelse(u2==0,i2<-log(x4),i2<-(x4^u2-1)/u2)
i=cbind(i1,i2)
L=-n/2*log(det((n-1)*cov(i)/n))+(u1-1)*sum(log(x1))+(u2-1)*sum(log(x4))
return(L)
}
library(maxLik)
result<-maxLik(normal,start=c(1,1))
knitr::opts_chunk$set(echo = TRUE)
x=read.table("T1-5.DAT")
x<- as.numeric(unlist(x[,2]))
b<-qqnorm(x)
x1<-b$x
y1<-b$y
r1=cor(x1,y1)
x1<-b$x
y1<-b$y
r1=cor(x1,y1)
r1
