cauchyref<-qcauchy(a)##柯西分布分位点参考值
mycauchy<-quantile(y,a)##我得到的链对应的分位点
qqplot(cauchyref,mycauchy,xlab="quantile",ylab="sample quantile",xlim=c(-10,10))
hist(y,breaks = "scott",xlab="sample",ylab="density",ylim=c(0,0.35),freq=FALSE)
lines(cauchyref,dcauchy(cauchyref))
N<-2000
b<-1001##丢掉前1000个
a<-c(0.05,seq(0.1,0.9,0.1),0.95)##各个十分位数
cauchyref<-qcauchy(a)##参考十分位数
discauchyline<-cauchyline[b:N,]##丢弃前1000个后的链
mycauchy1<-quantile(discauchyline[,1],a)##我的分位数,每一列分别算出分位数然后拼接起来
mycauchy2<-quantile(discauchyline[,2],a)
mycauchy3<-quantile(discauchyline[,3],a)
mycauchy4<-quantile(discauchyline[,4],a)
mycauchy<-cbind(mycauchy1,mycauchy2)
mycauchy<-cbind(mycauchy,mycauchy3)
mycauchy<-cbind(mycauchy,mycauchy4)
print(round(cbind(cauchyref,mycauchy),3))##结果保留三位小数打印出来
indepmetro<-function(mu,sigma,m,p,samsigma,sammu){
# sigma,mu为提议正态分布的参数
# m为链的长度
# p,samsigma,sammu为要抽样的分布的参数
xt<-numeric(m)
u<-runif(m)
y<-rnorm(m,mu,sigma)##对提议分布抽样
k<-0
xt[1]=10
for(i in 2:m){
fy<-p*dnorm(y[i],sammu[1],samsigma[1])+(1-p)*dnorm(y[i],sammu[2],samsigma[2])
indepmetro<-function(mu,sigma,m,p,samsigma,sammu){
# sigma,mu为提议正态分布的参数
# m为链的长度
# p,samsigma,sammu为要抽样的分布的参数
xt<-numeric(m)
u<-runif(m)
##对提议分布抽样
y<-rnorm(m,mu,sigma)
k<-0
xt[1]=10
for(i in 2:m){
fy<-p*dnorm(y[i],sammu[1],samsigma[1])+(1-p)*dnorm(y[i],sammu[2],samsigma[2])
fx<-p*dnorm(xt[i-1],sammu[1],samsigma[1])+(1-p)*dnorm(xt[i-1],sammu[2],samsigma[2])
r<-fy/fx*dnorm(xt[i-1],mu,sigma)/dnorm(y[i],mu,sigma)
if(u[i]<=r)
xt[i]<-y[i]
else{
xt[i]<-xt[i-1]
k<-k+1
}
}
return(list(x=xt,k=k))
}
mu<-4
sigma<-c(0.05,0.5,2,16)##这里我从小到大取了一些值
m<-5000
p<-0.2
sammu<-c(0,5)
samsigma<-c(1,1)
hynorm<-numeric(4)
for(i in 1:4){
hynorm[i]<-indepmetro(mu,sigma[i],m,p,sammu,samsigma)$k
print(hynorm[i]/m)
}
indepmetro<-function(mu,sigma,m,p,samsigma,sammu){
# sigma,mu为提议正态分布的参数
# m为链的长度
# p,samsigma,sammu为要抽样的分布的参数
xt<-numeric(m)
u<-runif(m)
##对提议分布抽样
y<-rnorm(m,mu,sigma)
k<-0
xt[1]=10
for(i in 2:m){
fy<-p*dnorm(y[i],sammu[1],samsigma[1])+(1-p)*dnorm(y[i],sammu[2],samsigma[2])
fx<-p*dnorm(xt[i-1],sammu[1],samsigma[1])+(1-p)*dnorm(xt[i-1],sammu[2],samsigma[2])
r<-fy/fx*dnorm(xt[i-1],mu,sigma)/dnorm(y[i],mu,sigma)
if(u[i]<=r)
xt[i]<-y[i]
else{
xt[i]<-xt[i-1]
k<-k+1
}
}
return(list(x=xt,k=k))
}
mu<-4
sigma<-c(0.05,0.5,2,16)##这里我从小到大取了一些值
m<-5000
p<-0.2
sammu<-c(0,5)
samsigma<-c(1,1)
hynorm<-numeric(4)
for(i in 1:4){
hynorm[i]<-indepmetro(mu,sigma[i],m,p,sammu,samsigma)$k
print(hynorm[i]/m)
}
indepmetro<-function(mu,sigma,m,p,samsigma,sammu){
# sigma,mu为提议正态分布的参数
# m为链的长度
# p,samsigma,sammu为要抽样的分布的参数
xt<-numeric(m)
u<-runif(m)
##对提议分布抽样
y<-rnorm(m,mu,sigma)
k<-0
xt[1]=10
for(i in 2:m){
fy<-p*dnorm(y[i],sammu[1],samsigma[1])+(1-p)*dnorm(y[i],sammu[2],samsigma[2])
fx<-p*dnorm(xt[i-1],sammu[1],samsigma[1])+(1-p)*dnorm(xt[i-1],sammu[2],samsigma[2])
r<-fy/fx*dnorm(xt[i-1],mu,sigma)/dnorm(y[i],mu,sigma)
if(u[i]<=r)
xt[i]<-y[i]
else{
xt[i]<-xt[i-1]
k<-k+1
}
}
return(list(x=xt,k=k))
}
mu<-4
sigma<-c(0.05,0.5,2,16)##这里我从小到大取了一些值
m<-5000
p<-0.2
sammu<-c(0,5)
samsigma<-c(1,1)
hynorm<-numeric(4)
for(i in 1:4){
hynorm[i]<-indepmetro(mu,sigma[i],m,p,sammu,samsigma)$k
print(hynorm[i]/m)
}
indepmetro<-function(mu,sigma,m,p,samsigma,sammu){
# sigma,mu为提议正态分布的参数
# m为链的长度
# p,samsigma,sammu为要抽样的分布的参数
xt<-numeric(m)
u<-runif(m)
##对提议分布抽样
y<-rnorm(m,mu,sigma)
k<-0
xt[1]=10
for(i in 2:m){
fy<-p*dnorm(y[i],sammu[1],samsigma[1])+(1-p)*dnorm(y[i],sammu[2],samsigma[2])
fx<-p*dnorm(xt[i-1],sammu[1],samsigma[1])+(1-p)*dnorm(xt[i-1],sammu[2],samsigma[2])
r<-fy/fx*dnorm(xt[i-1],mu,sigma)/dnorm(y[i],mu,sigma)
if(u[i]<=r)
xt[i]<-y[i]
else{
xt[i]<-xt[i-1]
k<-k+1
}
}
return(list(x=xt,k=k))
}
mu<-4
sigma<-c(0.25,0.5,2,16)##这里我从小到大取了一些值
m<-5000
p<-0.2
sammu<-c(0,5)
samsigma<-c(1,1)
hynorm<-numeric(4)
for(i in 1:4){
hynorm[i]<-indepmetro(mu,sigma[i],m,p,sammu,samsigma)$k
print(hynorm[i]/m)
}
indepmetro<-function(mu,sigma,m,p,samsigma,sammu){
# sigma,mu为提议正态分布的参数
# m为链的长度
# p,samsigma,sammu为要抽样的分布的参数
xt<-numeric(m)
u<-runif(m)
##对提议分布抽样
y<-rnorm(m,mu,sigma)
k<-0
xt[1]=10
for(i in 2:m){
fy<-p*dnorm(y[i],sammu[1],samsigma[1])+(1-p)*dnorm(y[i],sammu[2],samsigma[2])
fx<-p*dnorm(xt[i-1],sammu[1],samsigma[1])+(1-p)*dnorm(xt[i-1],sammu[2],samsigma[2])
r<-fy/fx*dnorm(xt[i-1],mu,sigma)/dnorm(y[i],mu,sigma)
if(u[i]<=r)
xt[i]<-y[i]
else{
xt[i]<-xt[i-1]
k<-k+1
}
}
return(list(x=xt,k=k))
}
mu<-4
sigma<-c(0.05,0.5,2,16)##这里我从小到大取了一些值
m<-5000
p<-0.2
sammu<-c(0,5)
samsigma<-c(1,1)
hynorm<-numeric(4)
for(i in 1:4){
hynorm[i]<-indepmetro(mu,sigma[i],m,p,sammu,samsigma)$k
print(hynorm[i]/m)
}
mu<-4
sigma<-c(0.05,0.5,2,16)
m<-5000
p<-0.2
sammu<-c(0,5)
samsigma<-c(1,1)
hynorm1<-indepmetro(mu,sigma[1],m,p,sammu,samsigma)
hynorm2<-indepmetro(mu,sigma[2],m,p,sammu,samsigma)
hynorm3<-indepmetro(mu,sigma[3],m,p,sammu,samsigma)
hynorm4<-indepmetro(mu,sigma[4],m,p,sammu,samsigma)
hynorm<-cbind(hynorm1$x,hynorm2$x,hynorm3$x,hynorm4$x)
par(mfrow=c(2,2))##方便比较四个图以2*2的形式排列
for(j in 1:4){
plot(hynorm[,j],type="l",xlab=bquote(sigma==.(round(sigma[j],3))),ylab="X",ylim=range(hynorm[,j]))
}
par(mfrow=c(1,1))
mean1=mean(hynorm3$x)
var1=var(hynorm3$x)
print(c(mean1,var1))
cindepmetro<-function(mu,lambda,m,p,samsigma,sammu){
# lambda,mu为提议正态分布的参数
# m为链的长度
# p,samsigma,sammu为要抽样的分布的参数
xt<-numeric(m)
u<-runif(m)
##对提议分布抽样
y<-rcauchy(m,mu,lambda)
k<-0
xt[1]=5
for(i in 2:m){
fy<-p*dnorm(y[i],sammu[1],samsigma[1])+(1-p)*dnorm(y[i],sammu[2],samsigma[2])
fx<-p*dnorm(xt[i-1],sammu[1],samsigma[1])+(1-p)*dnorm(xt[i-1],sammu[2],samsigma[2])
r<-fy/fx*dcauchy(xt[i-1],mu,lambda)/dcauchy(y[i],mu,lambda)
if(u[i]<=r)
xt[i]<-y[i]
else{
xt[i]<-xt[i-1]
k<-k+1
}
}
return(list(x=xt,k=k))
}
mu<-4
lambda<-c(0.05,0.5,3,20)##这里我从小到大取了一些值
m<-5000
p<-0.2
sammu<-c(0,5)
samsigma<-c(1,1)
chynorm<-numeric(4)
##这一部分主要验证代码确实可以运行
for(i in 1:4){
chynorm[i]<-cindepmetro(mu,lambda[i],m,p,sammu,samsigma)$k
print(chynorm[i]/m)
}
mu<-4
lambda<-c(0.05,0.5,3,20)
m<-5000
p<-0.2
sammu<-c(0,5)
samsigma<-c(1,1)
chynorm1<-cindepmetro(mu,lambda[1],m,p,sammu,samsigma)
chynorm2<-cindepmetro(mu,lambda[2],m,p,sammu,samsigma)
chynorm3<-cindepmetro(mu,lambda[3],m,p,sammu,samsigma)
chynorm4<-cindepmetro(mu,lambda[4],m,p,sammu,samsigma)
chynorm<-cbind(chynorm1$x,chynorm2$x,chynorm3$x,chynorm4$x)
par(mfrow=c(2,2))##方便比较四个图以2*2的形式排列
for(j in 1:4){
plot(chynorm[,j],type="l",xlab=bquote(lambda==.(round(lambda[j],3))),ylab="X",ylim=range(chynorm[,j]))
}
par(mfrow=c(1,1))
mean2=mean(chynorm3$x)
var2=var(chynorm3$x)
print(c(mean2,var2))
mean2=mean(chynorm4$x)
var2=var(chynorm4$x)
print(c(mean2,var2))
mu<-4
lambda<-c(0.05,0.5,3,20)
m<-5000
p<-0.2
sammu<-c(0,5)
samsigma<-c(1,1)
chynorm1<-cindepmetro(mu,lambda[1],m,p,sammu,samsigma)
chynorm2<-cindepmetro(mu,lambda[2],m,p,sammu,samsigma)
chynorm3<-cindepmetro(mu,lambda[3],m,p,sammu,samsigma)
chynorm4<-cindepmetro(mu,lambda[4],m,p,sammu,samsigma)
chynorm<-cbind(chynorm1$x,chynorm2$x,chynorm3$x,chynorm4$x)
par(mfrow=c(2,2))##方便比较四个图以2*2的形式排列
for(j in 1:4){
plot(chynorm[,j],type="l",xlab=bquote(lambda==.(round(lambda[j],3))),ylab="X",ylim=range(chynorm[,j]))
}
par(mfrow=c(1,1))
mean2=mean(chynorm3$x)
var2=var(chynorm3$x)
print(c(mean2,var2))
thetafen<-quantile(Y[,1],0.5)
lambdafen<-quantile(Y[,11],0.5)
print(thetafen)##theta中位数
print(lambdafen)##lambda中位数
N<-5000##链长度
burn<-1000##预烧期
k<-10
X<-matrix(0,N,k+1)
x<-c(3,1,4,2,5,3,2,2,0,4)
#初值
X[1,]<-c(rep(1,times=k+1))
for(i in 2:N){
for(j in 1:k){
xt<-rgamma(1,x[j]+1,X[i-1,k+1]+1)
X[i,j]<-xt
}
lambdat<-rgamma(1,1+k,1+sum(X[i,1:k]))
X[i,k+1]<-lambdat
}
b<-burn+1
Y<-X[b:N,]
par(mfrow=c(1,2))
plot(Y[,1],type='l',xlab = "times",ylab = "theta1")
hist(Y[,1],main="histogram of theta1",breaks=c(seq(0,14,0.5)),xlab = "sample",ylab = "density",freq = FALSE)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
plot(Y[,11],type='l',xlab = "times",ylab = "lambda")
hist(Y[,11],main="histogram of lambda",breaks=c(seq(0,2,0.05)),xlab = "sample",ylab = "density",freq=FALSE)
par(mfrow=c(1,1))
thetafen<-quantile(Y[,1],0.5)
lambdafen<-quantile(Y[,11],0.5)
print(thetafen)##theta中位数
print(lambdafen)##lambda中位数
set.seed(2)
rwMetro<-function(lambda,mu,sigma,x0,N){
#lambda,mu为柯西分布的两个参数
#sigma为提议分布标准差
#x0为初始值
#N为链跑的次数
x<-numeric(N)##生成一个长为N的数组,且每个元素初始化为0
x[1]<-x0
u<-runif(N)##创建(0,1)均匀分布随机偏差，因为跑了N次，所以需要N个这样的偏差
k<-0##k为最终拒绝的个数
for(i in 2:N){##每次循环与接受概率比较，大就接受，小就舍去
y<-rnorm(1,x[i-1],sigma)
if(u[i]<=(lambda^2+(x[i-1]-mu)^2)/(lambda^2+(y-mu)^2))
x[i]<-y
else{
x[i]=x[i-1]
k=k+1
}
}
return(list(x=x,k=k))
}
#下面是代入数据部分
lambda<-1
mu<-0
N<-2000
sigma<-c(0.05,0.5,2.5,16)
x0<-30
cauchy1<-rwMetro(lambda,mu,sigma[1],x0,N)
cauchy2<-rwMetro(lambda,mu,sigma[2],x0,N)
cauchy3<-rwMetro(lambda,mu,sigma[3],x0,N)
cauchy4<-rwMetro(lambda,mu,sigma[4],x0,N)
#下面计算拒绝概率
print(c(cauchy1$k,cauchy2$k,cauchy3$k,cauchy4$k)/N)
sigma=c(0.05,0.5,2.5,16)
par(mfrow=c(2,2))##方便比较四个图以2*2的形式排列
refline<-qcauchy(c(0.025,0.975))##标准柯西分布的参考线
cauchyline<-cbind(cauchy1$x,cauchy2$x,cauchy3$x,cauchy4$x)
for(j in 1:4){
plot(cauchyline[,j],type="l",xlab=bquote(sigma==.(round(sigma[j],3))),ylab="X",ylim=range(cauchyline[,j]))
abline(h=refline)
}
par(mfrow=c(1,1))
set.seed(1)
rwMetro<-function(lambda,mu,sigma,x0,N){
#lambda,mu为柯西分布的两个参数
#sigma为提议分布标准差
#x0为初始值
#N为链跑的次数
x<-numeric(N)##生成一个长为N的数组,且每个元素初始化为0
x[1]<-x0
u<-runif(N)##创建(0,1)均匀分布随机偏差，因为跑了N次，所以需要N个这样的偏差
k<-0##k为最终拒绝的个数
for(i in 2:N){##每次循环与接受概率比较，大就接受，小就舍去
y<-rnorm(1,x[i-1],sigma)
if(u[i]<=(lambda^2+(x[i-1]-mu)^2)/(lambda^2+(y-mu)^2))
x[i]<-y
else{
x[i]=x[i-1]
k=k+1
}
}
return(list(x=x,k=k))
}
#下面是代入数据部分
lambda<-1
mu<-0
N<-2000
sigma<-c(0.05,0.5,2.5,16)
x0<-30
cauchy1<-rwMetro(lambda,mu,sigma[1],x0,N)
cauchy2<-rwMetro(lambda,mu,sigma[2],x0,N)
cauchy3<-rwMetro(lambda,mu,sigma[3],x0,N)
cauchy4<-rwMetro(lambda,mu,sigma[4],x0,N)
#下面计算拒绝概率
print(c(cauchy1$k,cauchy2$k,cauchy3$k,cauchy4$k)/N)
sigma=c(0.05,0.5,2.5,16)
par(mfrow=c(2,2))##方便比较四个图以2*2的形式排列
refline<-qcauchy(c(0.025,0.975))##标准柯西分布的参考线
cauchyline<-cbind(cauchy1$x,cauchy2$x,cauchy3$x,cauchy4$x)
for(j in 1:4){
plot(cauchyline[,j],type="l",xlab=bquote(sigma==.(round(sigma[j],3))),ylab="X",ylim=range(cauchyline[,j]))
abline(h=refline)
}
par(mfrow=c(1,1))
N=2000
b<-201##丢弃掉前200个点
y<-cauchy3$x[b:N]
a<-ppoints(100)##100个分位点
cauchyref<-qcauchy(a)##柯西分布分位点参考值
mycauchy<-quantile(y,a)##我得到的链对应的分位点
qqplot(cauchyref,mycauchy,xlab="quantile",ylab="sample quantile",xlim=c(-10,10))
hist(y,breaks = "scott",xlab="sample",ylab="density",ylim=c(0,0.35),freq=FALSE)
lines(cauchyref,dcauchy(cauchyref))
set.seed(3)
rwMetro<-function(lambda,mu,sigma,x0,N){
#lambda,mu为柯西分布的两个参数
#sigma为提议分布标准差
#x0为初始值
#N为链跑的次数
x<-numeric(N)##生成一个长为N的数组,且每个元素初始化为0
x[1]<-x0
u<-runif(N)##创建(0,1)均匀分布随机偏差，因为跑了N次，所以需要N个这样的偏差
k<-0##k为最终拒绝的个数
for(i in 2:N){##每次循环与接受概率比较，大就接受，小就舍去
y<-rnorm(1,x[i-1],sigma)
if(u[i]<=(lambda^2+(x[i-1]-mu)^2)/(lambda^2+(y-mu)^2))
x[i]<-y
else{
x[i]=x[i-1]
k=k+1
}
}
return(list(x=x,k=k))
}
#下面是代入数据部分
lambda<-1
mu<-0
N<-2000
sigma<-c(0.05,0.5,2.5,16)
x0<-30
cauchy1<-rwMetro(lambda,mu,sigma[1],x0,N)
cauchy2<-rwMetro(lambda,mu,sigma[2],x0,N)
cauchy3<-rwMetro(lambda,mu,sigma[3],x0,N)
cauchy4<-rwMetro(lambda,mu,sigma[4],x0,N)
#下面计算拒绝概率
print(c(cauchy1$k,cauchy2$k,cauchy3$k,cauchy4$k)/N)
sigma=c(0.05,0.5,2.5,16)
par(mfrow=c(2,2))##方便比较四个图以2*2的形式排列
refline<-qcauchy(c(0.025,0.975))##标准柯西分布的参考线
cauchyline<-cbind(cauchy1$x,cauchy2$x,cauchy3$x,cauchy4$x)
for(j in 1:4){
plot(cauchyline[,j],type="l",xlab=bquote(sigma==.(round(sigma[j],3))),ylab="X",ylim=range(cauchyline[,j]))
abline(h=refline)
}
par(mfrow=c(1,1))
N=2000
b<-201##丢弃掉前200个点
y<-cauchy3$x[b:N]
a<-ppoints(100)##100个分位点
cauchyref<-qcauchy(a)##柯西分布分位点参考值
mycauchy<-quantile(y,a)##我得到的链对应的分位点
qqplot(cauchyref,mycauchy,xlab="quantile",ylab="sample quantile",xlim=c(-10,10))
hist(y,breaks = "scott",xlab="sample",ylab="density",ylim=c(0,0.35),freq=FALSE)
lines(cauchyref,dcauchy(cauchyref))
set.seed(1)
mu<-4
sigma<-c(0.05,0.5,2,16)
m<-5000
p<-0.2
sammu<-c(0,5)
samsigma<-c(1,1)
hynorm1<-indepmetro(mu,sigma[1],m,p,sammu,samsigma)
hynorm2<-indepmetro(mu,sigma[2],m,p,sammu,samsigma)
hynorm3<-indepmetro(mu,sigma[3],m,p,sammu,samsigma)
hynorm4<-indepmetro(mu,sigma[4],m,p,sammu,samsigma)
hynorm<-cbind(hynorm1$x,hynorm2$x,hynorm3$x,hynorm4$x)
par(mfrow=c(2,2))##方便比较四个图以2*2的形式排列
for(j in 1:4){
plot(hynorm[,j],type="l",xlab=bquote(sigma==.(round(sigma[j],3))),ylab="X",ylim=range(hynorm[,j]))
}
par(mfrow=c(1,1))
mean1=mean(hynorm3$x)
var1=var(hynorm3$x)
print(c(mean1,var1))
set.seed(1)
mu<-4
lambda<-c(0.05,0.5,3,20)
m<-5000
p<-0.2
sammu<-c(0,5)
samsigma<-c(1,1)
chynorm1<-cindepmetro(mu,lambda[1],m,p,sammu,samsigma)
chynorm2<-cindepmetro(mu,lambda[2],m,p,sammu,samsigma)
chynorm3<-cindepmetro(mu,lambda[3],m,p,sammu,samsigma)
chynorm4<-cindepmetro(mu,lambda[4],m,p,sammu,samsigma)
chynorm<-cbind(chynorm1$x,chynorm2$x,chynorm3$x,chynorm4$x)
par(mfrow=c(2,2))##方便比较四个图以2*2的形式排列
for(j in 1:4){
plot(chynorm[,j],type="l",xlab=bquote(lambda==.(round(lambda[j],3))),ylab="X",ylim=range(chynorm[,j]))
}
par(mfrow=c(1,1))
mean2=mean(chynorm3$x)
var2=var(chynorm3$x)
print(c(mean2,var2))
View(chynorm3)
