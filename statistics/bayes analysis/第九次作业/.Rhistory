k=k+1
}
}}
return(list(x=x,k=k))
}
sigma<-c(0.05,0.5,2,16)
N<-5000
x0<-0.5
my1norm1<-rwMetro1(n,barx,sigma[1],x0,N)
my1norm2<-rwMetro1(n,barx,sigma[2],x0,N)
my1norm3<-rwMetro1(n,barx,sigma[3],x0,N)
my1norm4<-rwMetro1(n,barx,sigma[4],x0,N)
my1norm<-cbind(my1norm1$x,my1norm2$x,my1norm3$x,my1norm4$x)
par(mfrow=c(2,2))##方便比较四个图以2*2的形式排列
for(j in 1:4){
plot(my1norm[,j],type="l",xlab=bquote(sigma==.(round(sigma[j],3))),ylab="X",ylim=range(my1norm[,j]))
}
par(mfrow=c(1,1))
burn<-1001##预烧期
y<-my1norm3$x[burn:N]
m2<-sum(1/dnorm(y,barx,1/sqrt(n)))
print(m2)
set.seed(3)
##sigma为提议分布标准差
##x0为初始值
##N为链跑的次数
rwMetro1<-function(n,barx,sigma,x0,N){
x<-numeric(N)
x[1]<-x0
u<-runif(N)
k<-0
for(i in 2:N){
y<-rnorm(1,x[i-1],sigma)
if(y<=-1 || y>=1){
x[i]=x[i-1]
k=k+1
}
else{
if(u[i]<=exp(-((y-barx)^2/2)*n)/exp(-((x[i-1]-barx)^2/2)*n))
x[i]<-y
else{
x[i]=x[i-1]
k=k+1
}
}}
return(list(x=x,k=k))
}
sigma<-c(0.05,0.5,2,16)
N<-5000
x0<-0
my1norm1<-rwMetro1(n,barx,sigma[1],x0,N)
my1norm2<-rwMetro1(n,barx,sigma[2],x0,N)
my1norm3<-rwMetro1(n,barx,sigma[3],x0,N)
my1norm4<-rwMetro1(n,barx,sigma[4],x0,N)
my1norm<-cbind(my1norm1$x,my1norm2$x,my1norm3$x,my1norm4$x)
par(mfrow=c(2,2))##方便比较四个图以2*2的形式排列
for(j in 1:4){
plot(my1norm[,j],type="l",xlab=bquote(sigma==.(round(sigma[j],3))),ylab="X",ylim=range(my1norm[,j]))
}
par(mfrow=c(1,1))
set.seed(3)
##sigma为提议分布标准差
##x0为初始值
##N为链跑的次数
rwMetro<-function(n,barx,sigmax,sigma,x0,N){
x<-numeric(N)
x[1]<-x0
u<-runif(N)
k<-0
for(i in 2:N){
y<-rnorm(1,x[i-1],sigma)
if(u[i]<=exp(-((y-(n*barx+1)/(n+1))^2/2)*sigmax)/exp(-((x[i-1]-(n*barx+1)/(n+1))^2/2)*sigmax))
x[i]<-y
else{
x[i]=x[i-1]
k=k+1
}
}
return(list(x=x,k=k))
}
n<-30
xn<-rnorm(n,1,1)
barx<-mean(xn)
sigmax<-n+1
sigma<-c(0.05,0.5,2,16)
N<-5000
x0<-0
mynorm1<-rwMetro(n,barx,sigmax,sigma[1],x0,N)
mynorm2<-rwMetro(n,barx,sigmax,sigma[2],x0,N)
mynorm3<-rwMetro(n,barx,sigmax,sigma[3],x0,N)
mynorm4<-rwMetro(n,barx,sigmax,sigma[4],x0,N)
mynorm<-cbind(mynorm1$x,mynorm2$x,mynorm3$x,mynorm4$x)
par(mfrow=c(2,2))##方便比较四个图以2*2的形式排列
refline<-qnorm(c(0.025,0.975),(n*barx+1)/(n+1),1/sqrt(n+1))
for(j in 1:4){
plot(mynorm[,j],type="l",xlab=bquote(sigma==.(round(sigma[j],3))),ylab="X",ylim=range(mynorm[,j]))
abline(h=refline)
}
par(mfrow=c(1,1))
burn<-1001##预烧期
y<-mynorm3$x[burn:N]
m1<-sum(1/dnorm(y,barx,1/sqrt(n)))
print(m1)
set.seed(3)
##sigma为提议分布标准差
##x0为初始值
##N为链跑的次数
rwMetro1<-function(n,barx,sigma,x0,N){
x<-numeric(N)
x[1]<-x0
u<-runif(N)
k<-0
for(i in 2:N){
y<-rnorm(1,x[i-1],sigma)
if(y<=-1 || y>=1){
x[i]=x[i-1]
k=k+1
}
else{
if(u[i]<=exp(-((y-barx)^2/2)*n)/exp(-((x[i-1]-barx)^2/2)*n))
x[i]<-y
else{
x[i]=x[i-1]
k=k+1
}
}}
return(list(x=x,k=k))
}
sigma<-c(0.05,0.5,2,16)
N<-5000
x0<-0
my1norm1<-rwMetro1(n,barx,sigma[1],x0,N)
my1norm2<-rwMetro1(n,barx,sigma[2],x0,N)
my1norm3<-rwMetro1(n,barx,sigma[3],x0,N)
my1norm4<-rwMetro1(n,barx,sigma[4],x0,N)
my1norm<-cbind(my1norm1$x,my1norm2$x,my1norm3$x,my1norm4$x)
par(mfrow=c(2,2))##方便比较四个图以2*2的形式排列
for(j in 1:4){
plot(my1norm[,j],type="l",xlab=bquote(sigma==.(round(sigma[j],3))),ylab="X",ylim=range(my1norm[,j]))
}
par(mfrow=c(1,1))
burn<-1001##预烧期
y<-my1norm3$x[burn:N]
m2<-sum(1/dnorm(y,barx,1/sqrt(n)))
print(m2)
set.seed(2)
##sigma为提议分布标准差
##x0为初始值
##N为链跑的次数
rwMetro<-function(n,barx,sigmax,sigma,x0,N){
x<-numeric(N)
x[1]<-x0
u<-runif(N)
k<-0
for(i in 2:N){
y<-rnorm(1,x[i-1],sigma)
if(u[i]<=exp(-((y-(n*barx+1)/(n+1))^2/2)*sigmax)/exp(-((x[i-1]-(n*barx+1)/(n+1))^2/2)*sigmax))
x[i]<-y
else{
x[i]=x[i-1]
k=k+1
}
}
return(list(x=x,k=k))
}
n<-30
xn<-rnorm(n,1,1)
barx<-mean(xn)
sigmax<-n+1
sigma<-c(0.05,0.5,2,16)
N<-5000
x0<-0
mynorm1<-rwMetro(n,barx,sigmax,sigma[1],x0,N)
mynorm2<-rwMetro(n,barx,sigmax,sigma[2],x0,N)
mynorm3<-rwMetro(n,barx,sigmax,sigma[3],x0,N)
mynorm4<-rwMetro(n,barx,sigmax,sigma[4],x0,N)
mynorm<-cbind(mynorm1$x,mynorm2$x,mynorm3$x,mynorm4$x)
par(mfrow=c(2,2))##方便比较四个图以2*2的形式排列
refline<-qnorm(c(0.025,0.975),(n*barx+1)/(n+1),1/sqrt(n+1))
for(j in 1:4){
plot(mynorm[,j],type="l",xlab=bquote(sigma==.(round(sigma[j],3))),ylab="X",ylim=range(mynorm[,j]))
abline(h=refline)
}
par(mfrow=c(1,1))
burn<-1001##预烧期
y<-mynorm3$x[burn:N]
m1<-sum(1/dnorm(y,barx,1/sqrt(n)))
print(m1)
set.seed(2)
##sigma为提议分布标准差
##x0为初始值
##N为链跑的次数
rwMetro1<-function(n,barx,sigma,x0,N){
x<-numeric(N)
x[1]<-x0
u<-runif(N)
k<-0
for(i in 2:N){
y<-rnorm(1,x[i-1],sigma)
if(y<=-1 || y>=1){
x[i]=x[i-1]
k=k+1
}
else{
if(u[i]<=exp(-((y-barx)^2/2)*n)/exp(-((x[i-1]-barx)^2/2)*n))
x[i]<-y
else{
x[i]=x[i-1]
k=k+1
}
}}
return(list(x=x,k=k))
}
sigma<-c(0.05,0.5,2,16)
N<-5000
x0<-0
my1norm1<-rwMetro1(n,barx,sigma[1],x0,N)
my1norm2<-rwMetro1(n,barx,sigma[2],x0,N)
my1norm3<-rwMetro1(n,barx,sigma[3],x0,N)
my1norm4<-rwMetro1(n,barx,sigma[4],x0,N)
my1norm<-cbind(my1norm1$x,my1norm2$x,my1norm3$x,my1norm4$x)
par(mfrow=c(2,2))##方便比较四个图以2*2的形式排列
for(j in 1:4){
plot(my1norm[,j],type="l",xlab=bquote(sigma==.(round(sigma[j],3))),ylab="X",ylim=range(my1norm[,j]))
}
par(mfrow=c(1,1))
burn<-1001##预烧期
y<-my1norm3$x[burn:N]
m2<-sum(1/dnorm(y,barx,1/sqrt(n)))
print(m2)
set.seed(3)
##sigma为提议分布标准差
##x0为初始值
##N为链跑的次数
rwMetro<-function(n,barx,sigmax,sigma,x0,N){
x<-numeric(N)
x[1]<-x0
u<-runif(N)
k<-0
for(i in 2:N){
y<-rnorm(1,x[i-1],sigma)
if(u[i]<=exp(-((y-(n*barx+1)/(n+1))^2/2)*sigmax)/exp(-((x[i-1]-(n*barx+1)/(n+1))^2/2)*sigmax))
x[i]<-y
else{
x[i]=x[i-1]
k=k+1
}
}
return(list(x=x,k=k))
}
n<-30
xn<-rnorm(n,1,1)
barx<-mean(xn)
sigmax<-n+1
sigma<-c(0.05,0.5,2,16)
N<-5000
x0<-0
mynorm1<-rwMetro(n,barx,sigmax,sigma[1],x0,N)
mynorm2<-rwMetro(n,barx,sigmax,sigma[2],x0,N)
mynorm3<-rwMetro(n,barx,sigmax,sigma[3],x0,N)
mynorm4<-rwMetro(n,barx,sigmax,sigma[4],x0,N)
mynorm<-cbind(mynorm1$x,mynorm2$x,mynorm3$x,mynorm4$x)
par(mfrow=c(2,2))##方便比较四个图以2*2的形式排列
refline<-qnorm(c(0.025,0.975),(n*barx+1)/(n+1),1/sqrt(n+1))
for(j in 1:4){
plot(mynorm[,j],type="l",xlab=bquote(sigma==.(round(sigma[j],3))),ylab="X",ylim=range(mynorm[,j]))
abline(h=refline)
}
par(mfrow=c(1,1))
burn<-1001##预烧期
y<-mynorm3$x[burn:N]
m1<-sum(1/dnorm(y,barx,1/sqrt(n)))
print(m1)
set.seed(3)
##sigma为提议分布标准差
##x0为初始值
##N为链跑的次数
rwMetro1<-function(n,barx,sigma,x0,N){
x<-numeric(N)
x[1]<-x0
u<-runif(N)
k<-0
for(i in 2:N){
y<-rnorm(1,x[i-1],sigma)
if(y<=-1 || y>=1){
x[i]=x[i-1]
k=k+1
}
else{
if(u[i]<=exp(-((y-barx)^2/2)*n)/exp(-((x[i-1]-barx)^2/2)*n))
x[i]<-y
else{
x[i]=x[i-1]
k=k+1
}
}}
return(list(x=x,k=k))
}
sigma<-c(0.05,0.5,2,16)
N<-5000
x0<-0
my1norm1<-rwMetro1(n,barx,sigma[1],x0,N)
my1norm2<-rwMetro1(n,barx,sigma[2],x0,N)
my1norm3<-rwMetro1(n,barx,sigma[3],x0,N)
my1norm4<-rwMetro1(n,barx,sigma[4],x0,N)
my1norm<-cbind(my1norm1$x,my1norm2$x,my1norm3$x,my1norm4$x)
par(mfrow=c(2,2))##方便比较四个图以2*2的形式排列
for(j in 1:4){
plot(my1norm[,j],type="l",xlab=bquote(sigma==.(round(sigma[j],3))),ylab="X",ylim=range(my1norm[,j]))
}
par(mfrow=c(1,1))
set.seed(3)
##sigma为提议分布标准差
##x0为初始值
##N为链跑的次数
rwMetro<-function(n,barx,sigmax,sigma,x0,N){
x<-numeric(N)
x[1]<-x0
u<-runif(N)
k<-0
for(i in 2:N){
y<-rnorm(1,x[i-1],sigma)
if(u[i]<=exp(-((y-(n*barx+1)/(n+1))^2/2)*sigmax)/exp(-((x[i-1]-(n*barx+1)/(n+1))^2/2)*sigmax))
x[i]<-y
else{
x[i]=x[i-1]
k=k+1
}
}
return(list(x=x,k=k))
}
n<-30
xn<-rnorm(n,1,1)
barx<-mean(xn)
sigmax<-n+1
sigma<-c(0.05,0.5,2,16)
N<-5000
x0<-0
mynorm1<-rwMetro(n,barx,sigmax,sigma[1],x0,N)
mynorm2<-rwMetro(n,barx,sigmax,sigma[2],x0,N)
mynorm3<-rwMetro(n,barx,sigmax,sigma[3],x0,N)
mynorm4<-rwMetro(n,barx,sigmax,sigma[4],x0,N)
mynorm<-cbind(mynorm1$x,mynorm2$x,mynorm3$x,mynorm4$x)
par(mfrow=c(2,2))##方便比较四个图以2*2的形式排列
refline<-qnorm(c(0.025,0.975),(n*barx+1)/(n+1),1/sqrt(n+1))
for(j in 1:4){
plot(mynorm[,j],type="l",xlab=bquote(sigma==.(round(sigma[j],3))),ylab="X",ylim=range(mynorm[,j]))
abline(h=refline)
}
par(mfrow=c(1,1))
burn<-1001##预烧期
y<-mynorm3$x[burn:N]
m1<-sum(1/dnorm(y,barx,1/sqrt(n)))
print(1/m1)
set.seed(3)
##sigma为提议分布标准差
##x0为初始值
##N为链跑的次数
rwMetro1<-function(n,barx,sigma,x0,N){
x<-numeric(N)
x[1]<-x0
u<-runif(N)
k<-0
for(i in 2:N){
y<-rnorm(1,x[i-1],sigma)
if(y<=-1 || y>=1){
x[i]=x[i-1]
k=k+1
}
else{
if(u[i]<=exp(-((y-barx)^2/2)*n)/exp(-((x[i-1]-barx)^2/2)*n))
x[i]<-y
else{
x[i]=x[i-1]
k=k+1
}
}}
return(list(x=x,k=k))
}
sigma<-c(0.05,0.5,2,16)
N<-5000
x0<-0
my1norm1<-rwMetro1(n,barx,sigma[1],x0,N)
my1norm2<-rwMetro1(n,barx,sigma[2],x0,N)
my1norm3<-rwMetro1(n,barx,sigma[3],x0,N)
my1norm4<-rwMetro1(n,barx,sigma[4],x0,N)
my1norm<-cbind(my1norm1$x,my1norm2$x,my1norm3$x,my1norm4$x)
par(mfrow=c(2,2))##方便比较四个图以2*2的形式排列
for(j in 1:4){
plot(my1norm[,j],type="l",xlab=bquote(sigma==.(round(sigma[j],3))),ylab="X",ylim=range(my1norm[,j]))
}
par(mfrow=c(1,1))
burn<-1001##预烧期
y<-my1norm3$x[burn:N]
m2<-sum(1/dnorm(y,barx,1/sqrt(n)))
print(1/m2)
print(m2/m1)
set.seed(2)
##sigma为提议分布标准差
##x0为初始值
##N为链跑的次数
rwMetro<-function(n,barx,sigmax,sigma,x0,N){
x<-numeric(N)
x[1]<-x0
u<-runif(N)
k<-0
for(i in 2:N){
y<-rnorm(1,x[i-1],sigma)
if(u[i]<=exp(-((y-(n*barx+1)/(n+1))^2/2)*sigmax)/exp(-((x[i-1]-(n*barx+1)/(n+1))^2/2)*sigmax))
x[i]<-y
else{
x[i]=x[i-1]
k=k+1
}
}
return(list(x=x,k=k))
}
n<-30
xn<-rnorm(n,1,1)
barx<-mean(xn)
sigmax<-n+1
sigma<-c(0.05,0.5,2,16)
N<-5000
x0<-0
mynorm1<-rwMetro(n,barx,sigmax,sigma[1],x0,N)
mynorm2<-rwMetro(n,barx,sigmax,sigma[2],x0,N)
mynorm3<-rwMetro(n,barx,sigmax,sigma[3],x0,N)
mynorm4<-rwMetro(n,barx,sigmax,sigma[4],x0,N)
mynorm<-cbind(mynorm1$x,mynorm2$x,mynorm3$x,mynorm4$x)
par(mfrow=c(2,2))##方便比较四个图以2*2的形式排列
refline<-qnorm(c(0.025,0.975),(n*barx+1)/(n+1),1/sqrt(n+1))
for(j in 1:4){
plot(mynorm[,j],type="l",xlab=bquote(sigma==.(round(sigma[j],3))),ylab="X",ylim=range(mynorm[,j]))
abline(h=refline)
}
par(mfrow=c(1,1))
burn<-1001##预烧期
y<-mynorm3$x[burn:N]
m1<-sum(1/dnorm(y,barx,1/sqrt(n)))
print(1/m1)
set.seed(2)
##sigma为提议分布标准差
##x0为初始值
##N为链跑的次数
rwMetro1<-function(n,barx,sigma,x0,N){
x<-numeric(N)
x[1]<-x0
u<-runif(N)
k<-0
for(i in 2:N){
y<-rnorm(1,x[i-1],sigma)
if(y<=-1 || y>=1){
x[i]=x[i-1]
k=k+1
}
else{
if(u[i]<=exp(-((y-barx)^2/2)*n)/exp(-((x[i-1]-barx)^2/2)*n))
x[i]<-y
else{
x[i]=x[i-1]
k=k+1
}
}}
return(list(x=x,k=k))
}
sigma<-c(0.05,0.5,2,16)
N<-5000
x0<-0
my1norm1<-rwMetro1(n,barx,sigma[1],x0,N)
my1norm2<-rwMetro1(n,barx,sigma[2],x0,N)
my1norm3<-rwMetro1(n,barx,sigma[3],x0,N)
my1norm4<-rwMetro1(n,barx,sigma[4],x0,N)
my1norm<-cbind(my1norm1$x,my1norm2$x,my1norm3$x,my1norm4$x)
par(mfrow=c(2,2))##方便比较四个图以2*2的形式排列
for(j in 1:4){
plot(my1norm[,j],type="l",xlab=bquote(sigma==.(round(sigma[j],3))),ylab="X",ylim=range(my1norm[,j]))
}
par(mfrow=c(1,1))
burn<-1001##预烧期
y<-my1norm2$x[burn:N]
m2<-sum(1/dnorm(y,barx,1/sqrt(n)))
print(1/m2)
print(m2/m1)
burn<-1001##预烧期
y<-my1norm1$x[burn:N]
m2<-sum(1/dnorm(y,barx,1/sqrt(n)))
print(1/m2)
print(m2/m1)
burn<-1001##预烧期
y<-mynorm2$x[burn:N]
m1<-sum(1/dnorm(y,barx,1/sqrt(n)))
print(1/m1)
print(m2/m1)
burn<-1001##预烧期
y<-mynorm3$x[burn:N]
m1<-sum(1/dnorm(y,barx,1/sqrt(n)))
print(1/m1)
print(m2/m1)
print(m2/m1)
burn<-1001##预烧期
vx<-sum(xn^2)
myfunc1<-function(x){
return(exp(-(n*(x-barx)^2+vx-n*meanx^2)/2))
}
y<-mynorm3$x[burn:N]
m1<-sum(1/myfunc1(y))
print(1/m1)
burn<-1001##预烧期
y<-my1norm1$x[burn:N]
m2<-sum(1/myfunc1(y))
print(1/m2)
print(m2/m1)
