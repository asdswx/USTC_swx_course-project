if(k==i){
qwq[j,k]<--s[j,k]/s[i,i]
}
else{
qwq[j,k]<-s[j,k]-s[j,i]*s[i,k]/s[i,i]
}
}
}
}
print(qwq)
return(qwq)
}
s=read.table("1.txt")
##seq表示消去变换的枢轴序列，只要sp序列的绝对值即可
seq=c(1,2,1,3,1,2,1,4,1,2,1,3,1,2,1)
for(i in seq){
s<-matrixxq(s,i)
}
##消去变换函数
matrixxq<-function(s,i){
qwq<-matrix(rep(0,times=length(s[1,])*length(s[,1])),ncol=length(s[1,]))
for(j in 1:length(s[1,])){
for(k in 1:length(s[,1])){
if(j==i){
if(k==i){
qwq[j,k]<-1/s[j,k]
}
else{
qwq[j,k]<-s[j,k]/s[i,i]
}
}
else{
if(k==i){
qwq[j,k]<--s[j,k]/s[i,i]
}
else{
qwq[j,k]<-s[j,k]-s[j,i]*s[i,k]/s[i,i]
}
}
}
}
print(qwq)
return(qwq)
}
s=read.table("2.txt")
##seq表示消去变换的枢轴序列，只要sp序列的绝对值即可
seq=c(1,2,1,3,1,2,1,4,1,2,1,3,1,2,1)
for(i in seq){
s<-matrixxq(s,i)
}
##消去变换函数
matrixxq<-function(s,i){
qwq<-matrix(rep(0,times=length(s[1,])*length(s[,1])),ncol=length(s[1,]))
for(j in 1:length(s[1,])){
for(k in 1:length(s[,1])){
if(j==i){
if(k==i){
qwq[j,k]<-1/s[j,k]
}
else{
qwq[j,k]<-s[j,k]/s[i,i]
}
}
else{
if(k==i){
qwq[j,k]<--s[j,k]/s[i,i]
}
else{
qwq[j,k]<-s[j,k]-s[j,i]*s[i,k]/s[i,i]
}
}
}
}
print(qwq)
return(qwq)
}
s=read.table("1.txt")
##seq表示消去变换的枢轴序列，只要sp序列的绝对值即可
seq=c(1,2,1,3,1,2,1,4,1,2,1,3,1,2,1)
for(i in seq){
s<-matrixxq(s,i)
}
qf(0.95,1,13)
qf(0.95,1,14)
qf(0.95,1,15)
qf(0.95,1,16)
##消去变换函数
matrixxq<-function(s,i){
o<-abs(i)
qwq<-matrix(rep(0,times=length(s[1,])*length(s[,1])),ncol=length(s[1,]))
for(j in 1:length(s[1,])){
for(k in 1:length(s[,1])){
if(j==o){
if(k==o){
qwq[j,k]<-1/s[j,k]
}
else{
qwq[j,k]<-s[j,k]/s[o,o]
}
}
else{
if(k==o){
qwq[j,k]<--s[j,k]/s[o,o]
}
else{
qwq[j,k]<-s[j,k]-s[j,o]*s[o,k]/s[o,o]
}
}
}
}
print(qwq)
return(qwq)
}
s=read.table("2.txt")
#2.txt是中心化后的水泥数据增广矩阵
##seq表示消去变换的枢轴序列
seq=c(1,2,-1,3,1,-2,-1,4,1,2,-1,-3,1,-2,-1)
flag=c(0,0,0,0)
for(i in seq){
s<-matrixxq(s,i)
}
##消去变换函数
matrixxq<-function(s,i){
o<-abs(i)
qwq<-matrix(rep(0,times=length(s[1,])*length(s[,1])),ncol=length(s[1,]))
for(j in 1:length(s[1,])){
for(k in 1:length(s[,1])){
if(j==o){
if(k==o){
qwq[j,k]<-1/s[j,k]
}
else{
qwq[j,k]<-s[j,k]/s[o,o]
}
}
else{
if(k==o){
qwq[j,k]<--s[j,k]/s[o,o]
}
else{
qwq[j,k]<-s[j,k]-s[j,o]*s[o,k]/s[o,o]
}
}
}
}
return(qwq)
}
s=read.table("2.txt")
#2.txt是中心化后的水泥数据增广矩阵
##seq表示消去变换的枢轴序列,flag表示当前模型有哪些变量
seq=c(1,2,-1,3,1,-2,-1,4,1,2,-1,-3,1,-2,-1)
flag=c(0,0,0,0)
Tab<-matrix(rep(0,15*5),nrow=15)
dimnames(Tab)=list(seq(1,by=1,length=15))
paste(c("beta1","beta2","beta3","beta4","rss"))
k<-1
for(i in seq){
s<-matrixxq(s,i)
if(i>0){
flag[i]=1
}
else{
flag[i]=0
}
for(owo in 1:4){
if(flag[owo]==1){
Tab[k,owo]<-s[owo,length(s[1,])]
}
else{
Tab[k,owo]<-0
}
Tab[k,5]<-s[length(s[1,]),length(s[,1])]
k<-k+1
}
}
##消去变换函数
matrixxq<-function(s,i){
o<-abs(i)
qwq<-matrix(rep(0,times=length(s[1,])*length(s[,1])),ncol=length(s[1,]))
for(j in 1:length(s[1,])){
for(k in 1:length(s[,1])){
if(j==o){
if(k==o){
qwq[j,k]<-1/s[j,k]
}
else{
qwq[j,k]<-s[j,k]/s[o,o]
}
}
else{
if(k==o){
qwq[j,k]<--s[j,k]/s[o,o]
}
else{
qwq[j,k]<-s[j,k]-s[j,o]*s[o,k]/s[o,o]
}
}
}
}
return(qwq)
}
s=read.table("2.txt")
#2.txt是中心化后的水泥数据增广矩阵
##seq表示消去变换的枢轴序列,flag表示当前模型有哪些变量
seq=c(1,2,-1,3,1,-2,-1,4,1,2,-1,-3,1,-2,-1)
flag=c(0,0,0,0)
Tab<-matrix(rep(0,15*5),nrow=15)
dimnames(Tab)=list(seq(1,by=1,length=15))
paste(c("beta1","beta2","beta3","beta4","rss"))
k<-1
for(i in seq){
s<-matrixxq(s,i)
if(i>0){
flag[i]=1
}
else{
flag[abs(i)]=0
}
for(owo in 1:4){
if(flag[owo]==1){
Tab[k,owo]<-s[owo,length(s[1,])]
}
else{
Tab[k,owo]<-0
}
Tab[k,5]<-s[length(s[1,]),length(s[,1])]
k<-k+1
}
}
View(Tab)
##消去变换函数
matrixxq<-function(s,i){
o<-abs(i)
qwq<-matrix(rep(0,times=length(s[1,])*length(s[,1])),ncol=length(s[1,]))
for(j in 1:length(s[1,])){
for(k in 1:length(s[,1])){
if(j==o){
if(k==o){
qwq[j,k]<-1/s[j,k]
}
else{
qwq[j,k]<-s[j,k]/s[o,o]
}
}
else{
if(k==o){
qwq[j,k]<--s[j,k]/s[o,o]
}
else{
qwq[j,k]<-s[j,k]-s[j,o]*s[o,k]/s[o,o]
}
}
}
}
return(qwq)
}
s=read.table("2.txt")
#2.txt是中心化后的水泥数据增广矩阵
##seq表示消去变换的枢轴序列,flag表示当前模型有哪些变量
seq=c(1,2,-1,3,1,-2,-1,4,1,2,-1,-3,1,-2,-1)
flag=c(0,0,0,0)
Tab<-matrix(rep(0,15*5),nrow=15)
dimnames(Tab)=list(seq(1,by=1,length=15))
paste(c("beta1","beta2","beta3","beta4","rss"))
k<-1
for(i in seq){
s<-matrixxq(s,i)
if(i>0){
flag[i]=1
}
else{
flag[abs(i)]=0
}
for(owo in 1:4){
if(flag[owo]==1){
Tab[k,owo]<-s[owo,length(s[1,])]
}
else{
Tab[k,owo]<-0
}
Tab[k,5]<-s[length(s[1,]),length(s[,1])]
}k<-k+1
##消去变换函数
matrixxq<-function(s,i){
o<-abs(i)
qwq<-matrix(rep(0,times=length(s[1,])*length(s[,1])),ncol=length(s[1,]))
for(j in 1:length(s[1,])){
for(k in 1:length(s[,1])){
if(j==o){
if(k==o){
qwq[j,k]<-1/s[j,k]
}
else{
qwq[j,k]<-s[j,k]/s[o,o]
}
}
else{
if(k==o){
qwq[j,k]<--s[j,k]/s[o,o]
}
else{
qwq[j,k]<-s[j,k]-s[j,o]*s[o,k]/s[o,o]
}
}
}
}
return(qwq)
}
s=read.table("2.txt")
#2.txt是中心化后的水泥数据增广矩阵
##seq表示消去变换的枢轴序列,flag表示当前模型有哪些变量
seq=c(1,2,-1,3,1,-2,-1,4,1,2,-1,-3,1,-2,-1)
flag=c(0,0,0,0)
Tab<-matrix(rep(0,15*5),nrow=15)
dimnames(Tab)=list(seq(1,by=1,length=15))
paste(c("beta1","beta2","beta3","beta4","rss"))
k<-1
for(i in seq){
s<-matrixxq(s,i)
if(i>0){
flag[i]=1
}
else{
flag[abs(i)]=0
}
for(owo in 1:4){
if(flag[owo]==1){
Tab[k,owo]<-s[owo,length(s[1,])]
}
else{
Tab[k,owo]<-0
}
Tab[k,5]<-s[length(s[1,]),length(s[,1])]
}
k<-k+1
}
print(Tab)
knitr::opts_chunk$set(echo = TRUE)
##消去变换函数
matrixxq<-function(s,i){
o<-abs(i)
qwq<-matrix(rep(0,times=length(s[1,])*length(s[,1])),ncol=length(s[1,]))
for(j in 1:length(s[1,])){
for(k in 1:length(s[,1])){
if(j==o){
if(k==o){
qwq[j,k]<-1/s[j,k]
}
else{
qwq[j,k]<-s[j,k]/s[o,o]
}
}
else{
if(k==o){
qwq[j,k]<--s[j,k]/s[o,o]
}
else{
qwq[j,k]<-s[j,k]-s[j,o]*s[o,k]/s[o,o]
}
}
}
}
return(qwq)
}
s=read.table("1.txt")
#2.txt是中心化后的水泥数据增广矩阵
##seq表示消去变换的枢轴序列,flag表示当前模型有哪些变量,若不包含该变量，系数表中那一项为0
seq=c(1,2,-1,3,1,-2,-1,4,1,2,-1,-3,1,-2,-1)
flag=c(0,0,0,0)
Tab<-matrix(rep(0,15*5),nrow=15)
dimnames(Tab)=list(seq(1,by=1,length=15))
paste(c("beta1","beta2","beta3","beta4","rss"))
k<-1
for(i in seq){
s<-matrixxq(s,i)
if(i>0){
flag[i]=1
}
else{
flag[abs(i)]=0
}
for(owo in 1:4){
if(flag[owo]==1){
Tab[k,owo]<-s[owo,length(s[1,])]
}
else{
Tab[k,owo]<-0
}
Tab[k,5]<-s[length(s[1,]),length(s[,1])]
}
k<-k+1
}
##打印系数表
print(Tab)
##消去变换函数
matrixxq<-function(s,i){
o<-abs(i)
qwq<-matrix(rep(0,times=length(s[1,])*length(s[,1])),ncol=length(s[1,]))
for(j in 1:length(s[1,])){
for(k in 1:length(s[,1])){
if(j==o){
if(k==o){
qwq[j,k]<-1/s[j,k]
}
else{
qwq[j,k]<-s[j,k]/s[o,o]
}
}
else{
if(k==o){
qwq[j,k]<--s[j,k]/s[o,o]
}
else{
qwq[j,k]<-s[j,k]-s[j,o]*s[o,k]/s[o,o]
}
}
}
}
return(qwq)
}
s=read.table("1.txt")
#2.txt是中心化后的水泥数据增广矩阵
##seq表示消去变换的枢轴序列,flag表示当前模型有哪些变量,若不包含该变量，系数表中那一项为0
seq=c(1,2,-1,3,1,-2,-1,4,1,2,-1,-3,1,-2,-1)
flag=c(0,0,0,0)
Tab<-matrix(rep(0,15*5),nrow=15)
dimnames(Tab)=list(seq(1,by=1,length=15))
paste(c("beta1","beta2","beta3","beta4","rss"))
k<-1
for(i in seq){
s<-matrixxq(s,i)
if(i>0){
flag[i]=1
}
else{
flag[abs(i)]=0
}
for(owo in 1:4){
if(flag[owo]==1){
Tab[k,owo]<-s[owo,length(s[1,])]
}
else{
Tab[k,owo]<-0
}
Tab[k,5]<-s[length(s[1,]),length(s[,1])]
}
k<-k+1
}
##打印系数表
print(Tab)
##消去变换函数
matrixxq<-function(s,i){
o<-abs(i)
qwq<-matrix(rep(0,times=length(s[1,])*length(s[,1])),ncol=length(s[1,]))
for(j in 1:length(s[1,])){
for(k in 1:length(s[,1])){
if(j==o){
if(k==o){
qwq[j,k]<-1/s[j,k]
}
else{
qwq[j,k]<-s[j,k]/s[o,o]
}
}
else{
if(k==o){
qwq[j,k]<--s[j,k]/s[o,o]
}
else{
qwq[j,k]<-s[j,k]-s[j,o]*s[o,k]/s[o,o]
}
}
}
}
print(qwq)
return(qwq)
}
s=read.table("1.txt")
#2.txt是中心化后的水泥数据增广矩阵
##seq表示消去变换的枢轴序列,flag表示当前模型有哪些变量,若不包含该变量，系数表中那一项为0
seq=c(1,2,-1,3,1,-2,-1,4,1,2,-1,-3,1,-2,-1)
flag=c(0,0,0,0)
Tab<-matrix(rep(0,15*5),nrow=15)
dimnames(Tab)=list(seq(1,by=1,length=15))
paste(c("beta1","beta2","beta3","beta4","rss"))
k<-1
for(i in seq){
s<-matrixxq(s,i)
if(i>0){
flag[i]=1
}
else{
flag[abs(i)]=0
}
for(owo in 1:4){
if(flag[owo]==1){
Tab[k,owo]<-s[owo,length(s[1,])]
}
else{
Tab[k,owo]<-0
}
Tab[k,5]<-s[length(s[1,]),length(s[,1])]
}
k<-k+1
}
##打印系数表
print(Tab)
qf(0.9,1,16)
qf(0.95,1,16)
qf(0.95,1,15)
qf(0.95,1,14)
qf(0.95,1,13)
